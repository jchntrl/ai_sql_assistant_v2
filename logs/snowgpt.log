{"timestamp": "2025-06-22T17:14:57.836480+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-22T17:14:57.838482+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-22T17:14:57.884479+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-22T17:14:59.181755+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-22T17:15:00.419505+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": null}
{"timestamp": "2025-06-22T17:15:00.514644+00:00", "level": "INFO", "logger": "snowgpt", "message": "Database/Schema context changed", "module": "app", "function": "<module>", "line": 100}
{"timestamp": "2025-06-22T17:15:00.515690+00:00", "level": "INFO", "logger": "snowgpt", "message": "Session state reset due to context change", "module": "app", "function": "<module>", "line": 117}
{"timestamp": "2025-06-22T17:15:00.516644+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-22T17:15:00.907858+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-22T17:15:01.012092+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-22T17:15:01.628672+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-22T17:15:03.547364+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:21:45.947559+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T00:21:45.948560+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T00:21:46.006563+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:21:46.987904+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:21:48.329567+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": null}
{"timestamp": "2025-06-23T00:21:48.396635+00:00", "level": "INFO", "logger": "snowgpt", "message": "Database/Schema context changed", "module": "app", "function": "<module>", "line": 100}
{"timestamp": "2025-06-23T00:21:48.397635+00:00", "level": "INFO", "logger": "snowgpt", "message": "Session state reset due to context change", "module": "app", "function": "<module>", "line": 117}
{"timestamp": "2025-06-23T00:21:48.398634+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:21:48.701501+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:21:48.810494+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:21:49.110992+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:21:51.132048+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:08.511214+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T00:22:08.512217+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T00:22:08.514216+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:22:08.862300+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:22:09.950684+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": null}
{"timestamp": "2025-06-23T00:22:10.021213+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:10.321850+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:10.352848+00:00", "level": "INFO", "logger": "snowgpt", "message": "User interaction: user_input", "module": "st_utils", "function": "log_user_interaction", "line": 105}
{"timestamp": "2025-06-23T00:22:14.609071+00:00", "level": "INFO", "logger": "snowgpt", "message": "Agent routing_agent execution completed", "module": "st_utils", "function": "log_agent_performance", "line": 120, "agent_type": "routing_agent"}
{"timestamp": "2025-06-23T00:22:14.731150+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T00:22:14.732154+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T00:22:14.734148+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:22:15.066160+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:22:16.469943+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": null}
{"timestamp": "2025-06-23T00:22:16.544941+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:16.705205+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:16.799208+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:17.008736+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:18.818172+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:19.659612+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T00:22:19.660613+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T00:22:19.661615+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:22:19.823247+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:22:20.617418+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": null}
{"timestamp": "2025-06-23T00:22:20.699421+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:20.854033+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:20.947579+00:00", "level": "INFO", "logger": "snowgpt", "message": "User interaction: user_input", "module": "st_utils", "function": "log_user_interaction", "line": 105}
{"timestamp": "2025-06-23T00:22:31.058738+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT NAME, LAT, LON, CAPACITY FROM PUBLIC.STATION_INFO_FLATTEN WHERE LAT IS NOT NULL AND LON IS NOT NULL;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:31.557644+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT NAME, LAT, LON, CAPACITY FROM PUBLIC.STATION_INFO_FLATTEN WHERE LAT IS NOT NULL AND LON IS NOT NULL;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:32.936627+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CAPACITY::INTEGER AS CAPACITY, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE CAPACITY IS NOT NULL GROUP BY CAPACITY::INTEGER ORDER BY CAPACITY::INTEGER ASC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:33.243596+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CAPACITY::INTEGER AS CAPACITY, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE CAPACITY IS NOT NULL GROUP BY CAPACITY::INTEGER ORDER BY CAPACITY::INTEGER ASC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:35.048549+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATION_TYPE, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE STATION_TYPE IS NOT NULL GROUP BY STATION_TYPE ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:35.318235+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATION_TYPE, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE STATION_TYPE IS NOT NULL GROUP BY STATION_TYPE ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:36.675583+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT HAS_KIOSK, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY HAS_KIOSK ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:36.889051+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT HAS_KIOSK, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY HAS_KIOSK ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:37.913114+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT REGION_ID, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE REGION_ID IS NOT NULL GROUP BY REGION_ID ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:38.131579+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT REGION_ID, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE REGION_ID IS NOT NULL GROUP BY REGION_ID ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:39.258441+00:00", "level": "INFO", "logger": "snowgpt", "message": "Agent dashboard_agent execution completed", "module": "st_utils", "function": "log_agent_performance", "line": 120, "agent_type": "dashboard_agent", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:39.260440+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "import pandas as pd\n\ndf['LAT'] = pd.to_numeric(df['LAT'], errors='coerce')\ndf['LON'] = pd.to_numeric(df['LON'], errors='coerce')\n\nst.map(df[['LAT', 'LON']].rename(columns={'LAT': 'lat', 'LON': 'lon'}))"}
{"timestamp": "2025-06-23T00:22:39.263440+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT NAME, LAT, LON, CAPACITY FROM PUBLIC.STATION_INFO_FLATTEN WHERE LAT IS NOT NULL AND LON IS NOT NULL;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:39.417703+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT NAME, LAT, LON, CAPACITY FROM PUBLIC.STATION_INFO_FLATTEN WHERE LAT IS NOT NULL AND LON IS NOT NULL;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:39.455699+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.15526413917541504, "code_block": "import pandas as pd\n\ndf['LAT'] = pd.to_numeric(df['LAT'], errors='coerce')\ndf['LON'] = pd.to_numeric(df['LON'], errors='coerce')\n\nst.map(df[['LAT', 'LON']].rename(columns={'LAT': 'lat', 'LON': 'lon'}))"}
{"timestamp": "2025-06-23T00:22:39.455699+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"CAPACITY\", y=\"NUM_STATIONS\", x_label=\"Capacity\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:22:39.457701+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CAPACITY::INTEGER AS CAPACITY, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE CAPACITY IS NOT NULL GROUP BY CAPACITY::INTEGER ORDER BY CAPACITY::INTEGER ASC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:39.632704+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CAPACITY::INTEGER AS CAPACITY, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE CAPACITY IS NOT NULL GROUP BY CAPACITY::INTEGER ORDER BY CAPACITY::INTEGER ASC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:41.269037+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.1770038604736328, "code_block": "st.bar_chart(data=df, x=\"CAPACITY\", y=\"NUM_STATIONS\", x_label=\"Capacity\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:22:41.271037+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x='STATION_TYPE', y='NUM_STATIONS', x_label='Station Type', y_label='Number of Stations', use_container_width=True)"}
{"timestamp": "2025-06-23T00:22:41.273040+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATION_TYPE, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE STATION_TYPE IS NOT NULL GROUP BY STATION_TYPE ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:41.383073+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATION_TYPE, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE STATION_TYPE IS NOT NULL GROUP BY STATION_TYPE ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:41.417072+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.11103391647338867, "code_block": "st.bar_chart(data=df, x='STATION_TYPE', y='NUM_STATIONS', x_label='Station Type', y_label='Number of Stations', use_container_width=True)"}
{"timestamp": "2025-06-23T00:22:41.419072+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"HAS_KIOSK\", y=\"NUM_STATIONS\", x_label=\"Has Kiosk\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:22:41.421071+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT HAS_KIOSK, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY HAS_KIOSK ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:41.523590+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT HAS_KIOSK, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY HAS_KIOSK ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:41.543590+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.10352039337158203, "code_block": "st.bar_chart(data=df, x=\"HAS_KIOSK\", y=\"NUM_STATIONS\", x_label=\"Has Kiosk\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:22:41.545594+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": ""}
{"timestamp": "2025-06-23T00:22:41.548592+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT REGION_ID, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE REGION_ID IS NOT NULL GROUP BY REGION_ID ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:41.649202+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT REGION_ID, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE REGION_ID IS NOT NULL GROUP BY REGION_ID ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:41.657201+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.1016092300415039, "code_block": ""}
{"timestamp": "2025-06-23T00:22:41.663200+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:42.032200+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:22:43.715234+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:25:30.815196+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T00:25:30.816196+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T00:25:30.817196+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:25:31.350170+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:25:32.197020+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": null}
{"timestamp": "2025-06-23T00:25:32.269236+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:25:32.562749+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:25:32.653803+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "import pandas as pd\n\ndf['LAT'] = pd.to_numeric(df['LAT'], errors='coerce')\ndf['LON'] = pd.to_numeric(df['LON'], errors='coerce')\n\nst.map(df[['LAT', 'LON']].rename(columns={'LAT': 'lat', 'LON': 'lon'}))"}
{"timestamp": "2025-06-23T00:25:32.655798+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT NAME, LAT, LON, CAPACITY FROM PUBLIC.STATION_INFO_FLATTEN WHERE LAT IS NOT NULL AND LON IS NOT NULL;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:25:32.783800+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT NAME, LAT, LON, CAPACITY FROM PUBLIC.STATION_INFO_FLATTEN WHERE LAT IS NOT NULL AND LON IS NOT NULL;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:25:32.801797+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.128997802734375, "code_block": "import pandas as pd\n\ndf['LAT'] = pd.to_numeric(df['LAT'], errors='coerce')\ndf['LON'] = pd.to_numeric(df['LON'], errors='coerce')\n\nst.map(df[['LAT', 'LON']].rename(columns={'LAT': 'lat', 'LON': 'lon'}))"}
{"timestamp": "2025-06-23T00:25:32.802798+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"CAPACITY\", y=\"NUM_STATIONS\", x_label=\"Capacity\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:25:32.804796+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CAPACITY::INTEGER AS CAPACITY, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE CAPACITY IS NOT NULL GROUP BY CAPACITY::INTEGER ORDER BY CAPACITY::INTEGER ASC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:25:32.955799+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CAPACITY::INTEGER AS CAPACITY, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE CAPACITY IS NOT NULL GROUP BY CAPACITY::INTEGER ORDER BY CAPACITY::INTEGER ASC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:25:32.975799+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.15200304985046387, "code_block": "st.bar_chart(data=df, x=\"CAPACITY\", y=\"NUM_STATIONS\", x_label=\"Capacity\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:25:32.977800+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x='STATION_TYPE', y='NUM_STATIONS', x_label='Station Type', y_label='Number of Stations', use_container_width=True)"}
{"timestamp": "2025-06-23T00:25:32.979801+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATION_TYPE, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE STATION_TYPE IS NOT NULL GROUP BY STATION_TYPE ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:25:33.108800+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATION_TYPE, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE STATION_TYPE IS NOT NULL GROUP BY STATION_TYPE ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:25:33.128796+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.1309981346130371, "code_block": "st.bar_chart(data=df, x='STATION_TYPE', y='NUM_STATIONS', x_label='Station Type', y_label='Number of Stations', use_container_width=True)"}
{"timestamp": "2025-06-23T00:25:33.129799+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"HAS_KIOSK\", y=\"NUM_STATIONS\", x_label=\"Has Kiosk\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:25:33.131798+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT HAS_KIOSK, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY HAS_KIOSK ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:25:33.249805+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT HAS_KIOSK, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY HAS_KIOSK ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:25:33.267807+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.11800670623779297, "code_block": "st.bar_chart(data=df, x=\"HAS_KIOSK\", y=\"NUM_STATIONS\", x_label=\"Has Kiosk\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:25:33.268799+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": ""}
{"timestamp": "2025-06-23T00:25:33.271800+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT REGION_ID, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE REGION_ID IS NOT NULL GROUP BY REGION_ID ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:25:33.378798+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT REGION_ID, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE REGION_ID IS NOT NULL GROUP BY REGION_ID ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:25:33.385800+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.10900020599365234, "code_block": ""}
{"timestamp": "2025-06-23T00:25:33.390803+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:25:33.708803+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:25:35.546881+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT REGION_ID, COUNT(*) AS NUM_STATIONS \nFROM PUBLIC.STATION_INFO_FLATTEN \nWHERE REGION_ID IS NOT NULL \nGROUP BY REGION_ID \nORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:25:35.660471+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT REGION_ID, COUNT(*) AS NUM_STATIONS \nFROM PUBLIC.STATION_INFO_FLATTEN \nWHERE REGION_ID IS NOT NULL \nGROUP BY REGION_ID \nORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:25:35.663487+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:28:23.933666+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T00:28:23.934665+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T00:28:23.936664+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:28:24.357780+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:28:25.224637+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": null}
{"timestamp": "2025-06-23T00:28:25.309635+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:28:25.609081+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:29:24.283413+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T00:29:24.284404+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T00:29:24.288405+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:29:24.630953+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:29:26.520462+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T00:29:26.521462+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T00:29:26.523462+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:29:26.852466+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:29:27.693402+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": null}
{"timestamp": "2025-06-23T00:29:27.768280+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:29:28.068628+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:29:28.153639+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "import pandas as pd\n\ndf['LAT'] = pd.to_numeric(df['LAT'], errors='coerce')\ndf['LON'] = pd.to_numeric(df['LON'], errors='coerce')\n\nst.map(df[['LAT', 'LON']].rename(columns={'LAT': 'lat', 'LON': 'lon'}))"}
{"timestamp": "2025-06-23T00:29:28.156641+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT NAME, LAT, LON, CAPACITY FROM PUBLIC.STATION_INFO_FLATTEN WHERE LAT IS NOT NULL AND LON IS NOT NULL;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:29:28.289639+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT NAME, LAT, LON, CAPACITY FROM PUBLIC.STATION_INFO_FLATTEN WHERE LAT IS NOT NULL AND LON IS NOT NULL;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:29:28.311640+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.1349949836730957, "code_block": "import pandas as pd\n\ndf['LAT'] = pd.to_numeric(df['LAT'], errors='coerce')\ndf['LON'] = pd.to_numeric(df['LON'], errors='coerce')\n\nst.map(df[['LAT', 'LON']].rename(columns={'LAT': 'lat', 'LON': 'lon'}))"}
{"timestamp": "2025-06-23T00:29:28.313638+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"CAPACITY\", y=\"NUM_STATIONS\", x_label=\"Capacity\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:29:28.315638+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CAPACITY::INTEGER AS CAPACITY, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE CAPACITY IS NOT NULL GROUP BY CAPACITY::INTEGER ORDER BY CAPACITY::INTEGER ASC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:29:28.443670+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CAPACITY::INTEGER AS CAPACITY, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE CAPACITY IS NOT NULL GROUP BY CAPACITY::INTEGER ORDER BY CAPACITY::INTEGER ASC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:29:28.467670+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.13003063201904297, "code_block": "st.bar_chart(data=df, x=\"CAPACITY\", y=\"NUM_STATIONS\", x_label=\"Capacity\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:29:28.470673+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x='STATION_TYPE', y='NUM_STATIONS', x_label='Station Type', y_label='Number of Stations', use_container_width=True)"}
{"timestamp": "2025-06-23T00:29:28.473670+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATION_TYPE, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE STATION_TYPE IS NOT NULL GROUP BY STATION_TYPE ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:29:28.596669+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATION_TYPE, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE STATION_TYPE IS NOT NULL GROUP BY STATION_TYPE ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:29:28.632675+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.12299823760986328, "code_block": "st.bar_chart(data=df, x='STATION_TYPE', y='NUM_STATIONS', x_label='Station Type', y_label='Number of Stations', use_container_width=True)"}
{"timestamp": "2025-06-23T00:29:28.634672+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"HAS_KIOSK\", y=\"NUM_STATIONS\", x_label=\"Has Kiosk\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:29:28.637675+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT HAS_KIOSK, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY HAS_KIOSK ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:29:28.770196+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT HAS_KIOSK, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY HAS_KIOSK ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:29:28.799203+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.13351917266845703, "code_block": "st.bar_chart(data=df, x=\"HAS_KIOSK\", y=\"NUM_STATIONS\", x_label=\"Has Kiosk\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:29:28.810200+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:29:29.150870+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:29:30.802707+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT REGION_ID, COUNT(*) AS NUM_STATIONS \nFROM PUBLIC.STATION_INFO_FLATTEN \nWHERE REGION_ID IS NOT NULL \nGROUP BY REGION_ID \nORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:29:30.915772+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT REGION_ID, COUNT(*) AS NUM_STATIONS \nFROM PUBLIC.STATION_INFO_FLATTEN \nWHERE REGION_ID IS NOT NULL \nGROUP BY REGION_ID \nORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:29:30.920774+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:29:57.385602+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T00:29:57.386598+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T00:29:57.388599+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:29:57.704697+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:29:58.523612+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": null}
{"timestamp": "2025-06-23T00:29:58.596614+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:29:58.775885+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:29:58.865887+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "import pandas as pd\n\ndf['LAT'] = pd.to_numeric(df['LAT'], errors='coerce')\ndf['LON'] = pd.to_numeric(df['LON'], errors='coerce')\n\nst.map(df[['LAT', 'LON']].rename(columns={'LAT': 'lat', 'LON': 'lon'}))"}
{"timestamp": "2025-06-23T00:29:58.867886+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT NAME, LAT, LON, CAPACITY FROM PUBLIC.STATION_INFO_FLATTEN WHERE LAT IS NOT NULL AND LON IS NOT NULL;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:29:58.984889+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT NAME, LAT, LON, CAPACITY FROM PUBLIC.STATION_INFO_FLATTEN WHERE LAT IS NOT NULL AND LON IS NOT NULL;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:29:59.013896+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.1179971694946289, "code_block": "import pandas as pd\n\ndf['LAT'] = pd.to_numeric(df['LAT'], errors='coerce')\ndf['LON'] = pd.to_numeric(df['LON'], errors='coerce')\n\nst.map(df[['LAT', 'LON']].rename(columns={'LAT': 'lat', 'LON': 'lon'}))"}
{"timestamp": "2025-06-23T00:29:59.014886+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"CAPACITY\", y=\"NUM_STATIONS\", x_label=\"Capacity\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:29:59.017887+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CAPACITY::INTEGER AS CAPACITY, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE CAPACITY IS NOT NULL GROUP BY CAPACITY::INTEGER ORDER BY CAPACITY::INTEGER ASC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:29:59.105886+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CAPACITY::INTEGER AS CAPACITY, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE CAPACITY IS NOT NULL GROUP BY CAPACITY::INTEGER ORDER BY CAPACITY::INTEGER ASC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:29:59.124889+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.08899736404418945, "code_block": "st.bar_chart(data=df, x=\"CAPACITY\", y=\"NUM_STATIONS\", x_label=\"Capacity\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:29:59.127887+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x='STATION_TYPE', y='NUM_STATIONS', x_label='Station Type', y_label='Number of Stations', use_container_width=True)"}
{"timestamp": "2025-06-23T00:29:59.129892+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATION_TYPE, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE STATION_TYPE IS NOT NULL GROUP BY STATION_TYPE ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:29:59.250332+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATION_TYPE, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE STATION_TYPE IS NOT NULL GROUP BY STATION_TYPE ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:29:59.270336+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.1214442253112793, "code_block": "st.bar_chart(data=df, x='STATION_TYPE', y='NUM_STATIONS', x_label='Station Type', y_label='Number of Stations', use_container_width=True)"}
{"timestamp": "2025-06-23T00:29:59.272334+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"HAS_KIOSK\", y=\"NUM_STATIONS\", x_label=\"Has Kiosk\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:29:59.274333+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT HAS_KIOSK, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY HAS_KIOSK ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:29:59.391334+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT HAS_KIOSK, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY HAS_KIOSK ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:29:59.407339+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.11799907684326172, "code_block": "st.bar_chart(data=df, x=\"HAS_KIOSK\", y=\"NUM_STATIONS\", x_label=\"Has Kiosk\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:29:59.411331+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:29:59.720507+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:30:01.378894+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT REGION_ID, COUNT(*) AS NUM_STATIONS \nFROM PUBLIC.STATION_INFO_FLATTEN \nWHERE REGION_ID IS NOT NULL \nGROUP BY REGION_ID \nORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:30:01.493498+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT REGION_ID, COUNT(*) AS NUM_STATIONS \nFROM PUBLIC.STATION_INFO_FLATTEN \nWHERE REGION_ID IS NOT NULL \nGROUP BY REGION_ID \nORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:30:01.498544+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:30:36.643977+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T00:30:36.645978+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T00:30:36.647980+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:30:36.997558+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:30:39.518092+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T00:30:39.519045+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T00:30:39.521046+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:30:39.822040+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:30:40.735822+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": null}
{"timestamp": "2025-06-23T00:30:40.804818+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:30:41.105961+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:30:41.194962+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "import pandas as pd\n\ndf['LAT'] = pd.to_numeric(df['LAT'], errors='coerce')\ndf['LON'] = pd.to_numeric(df['LON'], errors='coerce')\n\nst.map(df[['LAT', 'LON']].rename(columns={'LAT': 'lat', 'LON': 'lon'}))"}
{"timestamp": "2025-06-23T00:30:41.196961+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT NAME, LAT, LON, CAPACITY FROM PUBLIC.STATION_INFO_FLATTEN WHERE LAT IS NOT NULL AND LON IS NOT NULL;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:30:41.308961+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT NAME, LAT, LON, CAPACITY FROM PUBLIC.STATION_INFO_FLATTEN WHERE LAT IS NOT NULL AND LON IS NOT NULL;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:30:41.334961+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.1139991283416748, "code_block": "import pandas as pd\n\ndf['LAT'] = pd.to_numeric(df['LAT'], errors='coerce')\ndf['LON'] = pd.to_numeric(df['LON'], errors='coerce')\n\nst.map(df[['LAT', 'LON']].rename(columns={'LAT': 'lat', 'LON': 'lon'}))"}
{"timestamp": "2025-06-23T00:30:41.335960+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"CAPACITY\", y=\"NUM_STATIONS\", x_label=\"Capacity\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:30:41.336964+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CAPACITY::INTEGER AS CAPACITY, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE CAPACITY IS NOT NULL GROUP BY CAPACITY::INTEGER ORDER BY CAPACITY::INTEGER ASC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:30:41.426489+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CAPACITY::INTEGER AS CAPACITY, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE CAPACITY IS NOT NULL GROUP BY CAPACITY::INTEGER ORDER BY CAPACITY::INTEGER ASC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:30:41.446365+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.08952498435974121, "code_block": "st.bar_chart(data=df, x=\"CAPACITY\", y=\"NUM_STATIONS\", x_label=\"Capacity\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:30:41.448364+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x='STATION_TYPE', y='NUM_STATIONS', x_label='Station Type', y_label='Number of Stations', use_container_width=True)"}
{"timestamp": "2025-06-23T00:30:41.451364+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATION_TYPE, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE STATION_TYPE IS NOT NULL GROUP BY STATION_TYPE ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:30:41.567634+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATION_TYPE, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE STATION_TYPE IS NOT NULL GROUP BY STATION_TYPE ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:30:41.594632+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.11826896667480469, "code_block": "st.bar_chart(data=df, x='STATION_TYPE', y='NUM_STATIONS', x_label='Station Type', y_label='Number of Stations', use_container_width=True)"}
{"timestamp": "2025-06-23T00:30:41.595633+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"HAS_KIOSK\", y=\"NUM_STATIONS\", x_label=\"Has Kiosk\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:30:41.598633+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT HAS_KIOSK, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY HAS_KIOSK ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:30:41.717629+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT HAS_KIOSK, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY HAS_KIOSK ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:30:41.738628+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.12099766731262207, "code_block": "st.bar_chart(data=df, x=\"HAS_KIOSK\", y=\"NUM_STATIONS\", x_label=\"Has Kiosk\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:30:41.742629+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:30:42.042379+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:30:43.847930+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT REGION_ID, COUNT(*) AS NUM_STATIONS \nFROM PUBLIC.STATION_INFO_FLATTEN \nWHERE REGION_ID IS NOT NULL \nGROUP BY REGION_ID \nORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:30:43.951933+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT REGION_ID, COUNT(*) AS NUM_STATIONS \nFROM PUBLIC.STATION_INFO_FLATTEN \nWHERE REGION_ID IS NOT NULL \nGROUP BY REGION_ID \nORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:30:43.955930+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:31:25.783383+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T00:31:25.783383+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T00:31:25.785384+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:31:26.107452+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:31:26.985192+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": null}
{"timestamp": "2025-06-23T00:31:27.048169+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:31:27.373642+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:31:27.464432+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "import pandas as pd\n\ndf['LAT'] = pd.to_numeric(df['LAT'], errors='coerce')\ndf['LON'] = pd.to_numeric(df['LON'], errors='coerce')\n\nst.map(df[['LAT', 'LON']].rename(columns={'LAT': 'lat', 'LON': 'lon'}))"}
{"timestamp": "2025-06-23T00:31:27.466432+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT NAME, LAT, LON, CAPACITY FROM PUBLIC.STATION_INFO_FLATTEN WHERE LAT IS NOT NULL AND LON IS NOT NULL;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:31:27.620426+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT NAME, LAT, LON, CAPACITY FROM PUBLIC.STATION_INFO_FLATTEN WHERE LAT IS NOT NULL AND LON IS NOT NULL;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:31:27.640435+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.15399432182312012, "code_block": "import pandas as pd\n\ndf['LAT'] = pd.to_numeric(df['LAT'], errors='coerce')\ndf['LON'] = pd.to_numeric(df['LON'], errors='coerce')\n\nst.map(df[['LAT', 'LON']].rename(columns={'LAT': 'lat', 'LON': 'lon'}))"}
{"timestamp": "2025-06-23T00:31:27.641429+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"CAPACITY\", y=\"NUM_STATIONS\", x_label=\"Capacity\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:31:27.644519+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CAPACITY::INTEGER AS CAPACITY, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE CAPACITY IS NOT NULL GROUP BY CAPACITY::INTEGER ORDER BY CAPACITY::INTEGER ASC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:31:27.751180+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CAPACITY::INTEGER AS CAPACITY, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE CAPACITY IS NOT NULL GROUP BY CAPACITY::INTEGER ORDER BY CAPACITY::INTEGER ASC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:31:27.768186+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.10775232315063477, "code_block": "st.bar_chart(data=df, x=\"CAPACITY\", y=\"NUM_STATIONS\", x_label=\"Capacity\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:31:27.770183+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x='STATION_TYPE', y='NUM_STATIONS', x_label='Station Type', y_label='Number of Stations', use_container_width=True)"}
{"timestamp": "2025-06-23T00:31:27.772243+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATION_TYPE, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE STATION_TYPE IS NOT NULL GROUP BY STATION_TYPE ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:31:27.865702+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATION_TYPE, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE STATION_TYPE IS NOT NULL GROUP BY STATION_TYPE ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:31:27.883705+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.0945127010345459, "code_block": "st.bar_chart(data=df, x='STATION_TYPE', y='NUM_STATIONS', x_label='Station Type', y_label='Number of Stations', use_container_width=True)"}
{"timestamp": "2025-06-23T00:31:27.884704+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"HAS_KIOSK\", y=\"NUM_STATIONS\", x_label=\"Has Kiosk\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:31:27.886705+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT HAS_KIOSK, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY HAS_KIOSK ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:31:27.988703+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT HAS_KIOSK, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY HAS_KIOSK ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:31:28.005702+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.10300111770629883, "code_block": "st.bar_chart(data=df, x=\"HAS_KIOSK\", y=\"NUM_STATIONS\", x_label=\"Has Kiosk\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:31:28.006705+00:00", "level": "INFO", "logger": "snowgpt", "message": "User interaction: user_input", "module": "st_utils", "function": "log_user_interaction", "line": 105}
{"timestamp": "2025-06-23T00:31:31.697693+00:00", "level": "INFO", "logger": "snowgpt", "message": "Agent routing_agent execution completed", "module": "st_utils", "function": "log_agent_performance", "line": 120, "agent_type": "routing_agent"}
{"timestamp": "2025-06-23T00:31:31.829421+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T00:31:31.830422+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T00:31:31.832949+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:31:32.123228+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:31:32.979896+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": null}
{"timestamp": "2025-06-23T00:31:33.057066+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:31:33.350953+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:31:33.439279+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "import pandas as pd\n\ndf['LAT'] = pd.to_numeric(df['LAT'], errors='coerce')\ndf['LON'] = pd.to_numeric(df['LON'], errors='coerce')\n\nst.map(df[['LAT', 'LON']].rename(columns={'LAT': 'lat', 'LON': 'lon'}))"}
{"timestamp": "2025-06-23T00:31:33.441283+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT NAME, LAT, LON, CAPACITY FROM PUBLIC.STATION_INFO_FLATTEN WHERE LAT IS NOT NULL AND LON IS NOT NULL;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:31:33.551000+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT NAME, LAT, LON, CAPACITY FROM PUBLIC.STATION_INFO_FLATTEN WHERE LAT IS NOT NULL AND LON IS NOT NULL;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:31:33.572252+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.11072349548339844, "code_block": "import pandas as pd\n\ndf['LAT'] = pd.to_numeric(df['LAT'], errors='coerce')\ndf['LON'] = pd.to_numeric(df['LON'], errors='coerce')\n\nst.map(df[['LAT', 'LON']].rename(columns={'LAT': 'lat', 'LON': 'lon'}))"}
{"timestamp": "2025-06-23T00:31:33.574250+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"CAPACITY\", y=\"NUM_STATIONS\", x_label=\"Capacity\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:31:33.576250+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CAPACITY::INTEGER AS CAPACITY, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE CAPACITY IS NOT NULL GROUP BY CAPACITY::INTEGER ORDER BY CAPACITY::INTEGER ASC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:31:33.669249+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CAPACITY::INTEGER AS CAPACITY, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE CAPACITY IS NOT NULL GROUP BY CAPACITY::INTEGER ORDER BY CAPACITY::INTEGER ASC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:31:33.686249+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.09499955177307129, "code_block": "st.bar_chart(data=df, x=\"CAPACITY\", y=\"NUM_STATIONS\", x_label=\"Capacity\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:31:33.688250+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x='STATION_TYPE', y='NUM_STATIONS', x_label='Station Type', y_label='Number of Stations', use_container_width=True)"}
{"timestamp": "2025-06-23T00:31:33.690250+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATION_TYPE, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE STATION_TYPE IS NOT NULL GROUP BY STATION_TYPE ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:31:33.801247+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATION_TYPE, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE STATION_TYPE IS NOT NULL GROUP BY STATION_TYPE ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:31:33.818247+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.11099696159362793, "code_block": "st.bar_chart(data=df, x='STATION_TYPE', y='NUM_STATIONS', x_label='Station Type', y_label='Number of Stations', use_container_width=True)"}
{"timestamp": "2025-06-23T00:31:33.819248+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"HAS_KIOSK\", y=\"NUM_STATIONS\", x_label=\"Has Kiosk\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:31:33.821252+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT HAS_KIOSK, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY HAS_KIOSK ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:31:33.928269+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT HAS_KIOSK, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY HAS_KIOSK ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:31:33.944270+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.10801982879638672, "code_block": "st.bar_chart(data=df, x=\"HAS_KIOSK\", y=\"NUM_STATIONS\", x_label=\"Has Kiosk\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:31:33.968762+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:31:34.277756+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:31:35.991223+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:09.452162+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T00:32:09.452162+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T00:32:09.455162+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:32:09.804293+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:32:10.689243+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": null}
{"timestamp": "2025-06-23T00:32:10.760263+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:11.078922+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:11.166937+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "import pandas as pd\n\ndf['LAT'] = pd.to_numeric(df['LAT'], errors='coerce')\ndf['LON'] = pd.to_numeric(df['LON'], errors='coerce')\n\nst.map(df[['LAT', 'LON']].rename(columns={'LAT': 'lat', 'LON': 'lon'}))"}
{"timestamp": "2025-06-23T00:32:11.167934+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT NAME, LAT, LON, CAPACITY FROM PUBLIC.STATION_INFO_FLATTEN WHERE LAT IS NOT NULL AND LON IS NOT NULL;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:11.312466+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT NAME, LAT, LON, CAPACITY FROM PUBLIC.STATION_INFO_FLATTEN WHERE LAT IS NOT NULL AND LON IS NOT NULL;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:11.330469+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.1445317268371582, "code_block": "import pandas as pd\n\ndf['LAT'] = pd.to_numeric(df['LAT'], errors='coerce')\ndf['LON'] = pd.to_numeric(df['LON'], errors='coerce')\n\nst.map(df[['LAT', 'LON']].rename(columns={'LAT': 'lat', 'LON': 'lon'}))"}
{"timestamp": "2025-06-23T00:32:11.331468+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"CAPACITY\", y=\"NUM_STATIONS\", x_label=\"Capacity\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:32:11.333467+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CAPACITY::INTEGER AS CAPACITY, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE CAPACITY IS NOT NULL GROUP BY CAPACITY::INTEGER ORDER BY CAPACITY::INTEGER ASC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:11.431468+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CAPACITY::INTEGER AS CAPACITY, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE CAPACITY IS NOT NULL GROUP BY CAPACITY::INTEGER ORDER BY CAPACITY::INTEGER ASC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:11.447465+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.0989997386932373, "code_block": "st.bar_chart(data=df, x=\"CAPACITY\", y=\"NUM_STATIONS\", x_label=\"Capacity\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:32:11.449467+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x='STATION_TYPE', y='NUM_STATIONS', x_label='Station Type', y_label='Number of Stations', use_container_width=True)"}
{"timestamp": "2025-06-23T00:32:11.451466+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATION_TYPE, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE STATION_TYPE IS NOT NULL GROUP BY STATION_TYPE ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:11.621468+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATION_TYPE, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE STATION_TYPE IS NOT NULL GROUP BY STATION_TYPE ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:11.643469+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.17100071907043457, "code_block": "st.bar_chart(data=df, x='STATION_TYPE', y='NUM_STATIONS', x_label='Station Type', y_label='Number of Stations', use_container_width=True)"}
{"timestamp": "2025-06-23T00:32:11.644467+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"HAS_KIOSK\", y=\"NUM_STATIONS\", x_label=\"Has Kiosk\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:32:11.646467+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT HAS_KIOSK, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY HAS_KIOSK ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:11.754527+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT HAS_KIOSK, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY HAS_KIOSK ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:11.776467+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.10906004905700684, "code_block": "st.bar_chart(data=df, x=\"HAS_KIOSK\", y=\"NUM_STATIONS\", x_label=\"Has Kiosk\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:32:11.801470+00:00", "level": "INFO", "logger": "snowgpt", "message": "User interaction: user_input", "module": "st_utils", "function": "log_user_interaction", "line": 105}
{"timestamp": "2025-06-23T00:32:16.033481+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T00:32:16.034478+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T00:32:16.037479+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:32:16.424208+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:32:17.414296+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": null}
{"timestamp": "2025-06-23T00:32:17.493362+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:17.664946+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:17.783965+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "import pandas as pd\n\ndf['LAT'] = pd.to_numeric(df['LAT'], errors='coerce')\ndf['LON'] = pd.to_numeric(df['LON'], errors='coerce')\n\nst.map(df[['LAT', 'LON']].rename(columns={'LAT': 'lat', 'LON': 'lon'}))"}
{"timestamp": "2025-06-23T00:32:17.786963+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT NAME, LAT, LON, CAPACITY FROM PUBLIC.STATION_INFO_FLATTEN WHERE LAT IS NOT NULL AND LON IS NOT NULL;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:17.927560+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT NAME, LAT, LON, CAPACITY FROM PUBLIC.STATION_INFO_FLATTEN WHERE LAT IS NOT NULL AND LON IS NOT NULL;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:17.949556+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.14159941673278809, "code_block": "import pandas as pd\n\ndf['LAT'] = pd.to_numeric(df['LAT'], errors='coerce')\ndf['LON'] = pd.to_numeric(df['LON'], errors='coerce')\n\nst.map(df[['LAT', 'LON']].rename(columns={'LAT': 'lat', 'LON': 'lon'}))"}
{"timestamp": "2025-06-23T00:32:17.950557+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"CAPACITY\", y=\"NUM_STATIONS\", x_label=\"Capacity\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:32:17.952556+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CAPACITY::INTEGER AS CAPACITY, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE CAPACITY IS NOT NULL GROUP BY CAPACITY::INTEGER ORDER BY CAPACITY::INTEGER ASC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:18.039216+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CAPACITY::INTEGER AS CAPACITY, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE CAPACITY IS NOT NULL GROUP BY CAPACITY::INTEGER ORDER BY CAPACITY::INTEGER ASC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:18.058222+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.08865904808044434, "code_block": "st.bar_chart(data=df, x=\"CAPACITY\", y=\"NUM_STATIONS\", x_label=\"Capacity\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:32:18.060221+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x='STATION_TYPE', y='NUM_STATIONS', x_label='Station Type', y_label='Number of Stations', use_container_width=True)"}
{"timestamp": "2025-06-23T00:32:18.062219+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATION_TYPE, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE STATION_TYPE IS NOT NULL GROUP BY STATION_TYPE ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:18.152220+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATION_TYPE, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE STATION_TYPE IS NOT NULL GROUP BY STATION_TYPE ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:18.175219+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.09199810028076172, "code_block": "st.bar_chart(data=df, x='STATION_TYPE', y='NUM_STATIONS', x_label='Station Type', y_label='Number of Stations', use_container_width=True)"}
{"timestamp": "2025-06-23T00:32:18.176222+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"HAS_KIOSK\", y=\"NUM_STATIONS\", x_label=\"Has Kiosk\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:32:18.178218+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT HAS_KIOSK, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY HAS_KIOSK ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:18.265220+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT HAS_KIOSK, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY HAS_KIOSK ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:18.286222+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.08799862861633301, "code_block": "st.bar_chart(data=df, x=\"HAS_KIOSK\", y=\"NUM_STATIONS\", x_label=\"Has Kiosk\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:32:18.338216+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:18.641709+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:20.309892+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:26.428228+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T00:32:26.429227+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T00:32:26.431229+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:32:26.769043+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:32:27.600476+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": null}
{"timestamp": "2025-06-23T00:32:27.679054+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:27.955924+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:28.042939+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "import pandas as pd\n\ndf['LAT'] = pd.to_numeric(df['LAT'], errors='coerce')\ndf['LON'] = pd.to_numeric(df['LON'], errors='coerce')\n\nst.map(df[['LAT', 'LON']].rename(columns={'LAT': 'lat', 'LON': 'lon'}))"}
{"timestamp": "2025-06-23T00:32:28.044940+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT NAME, LAT, LON, CAPACITY FROM PUBLIC.STATION_INFO_FLATTEN WHERE LAT IS NOT NULL AND LON IS NOT NULL;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:28.188937+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT NAME, LAT, LON, CAPACITY FROM PUBLIC.STATION_INFO_FLATTEN WHERE LAT IS NOT NULL AND LON IS NOT NULL;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:28.206938+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.14499831199645996, "code_block": "import pandas as pd\n\ndf['LAT'] = pd.to_numeric(df['LAT'], errors='coerce')\ndf['LON'] = pd.to_numeric(df['LON'], errors='coerce')\n\nst.map(df[['LAT', 'LON']].rename(columns={'LAT': 'lat', 'LON': 'lon'}))"}
{"timestamp": "2025-06-23T00:32:28.208938+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"CAPACITY\", y=\"NUM_STATIONS\", x_label=\"Capacity\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:32:28.209937+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CAPACITY::INTEGER AS CAPACITY, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE CAPACITY IS NOT NULL GROUP BY CAPACITY::INTEGER ORDER BY CAPACITY::INTEGER ASC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:28.309937+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CAPACITY::INTEGER AS CAPACITY, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE CAPACITY IS NOT NULL GROUP BY CAPACITY::INTEGER ORDER BY CAPACITY::INTEGER ASC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:28.325940+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.10000014305114746, "code_block": "st.bar_chart(data=df, x=\"CAPACITY\", y=\"NUM_STATIONS\", x_label=\"Capacity\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:32:28.327938+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x='STATION_TYPE', y='NUM_STATIONS', x_label='Station Type', y_label='Number of Stations', use_container_width=True)"}
{"timestamp": "2025-06-23T00:32:28.328938+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATION_TYPE, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE STATION_TYPE IS NOT NULL GROUP BY STATION_TYPE ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:28.437948+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATION_TYPE, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE STATION_TYPE IS NOT NULL GROUP BY STATION_TYPE ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:28.457964+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.10901021957397461, "code_block": "st.bar_chart(data=df, x='STATION_TYPE', y='NUM_STATIONS', x_label='Station Type', y_label='Number of Stations', use_container_width=True)"}
{"timestamp": "2025-06-23T00:32:28.458964+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"HAS_KIOSK\", y=\"NUM_STATIONS\", x_label=\"Has Kiosk\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:32:28.460964+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT HAS_KIOSK, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY HAS_KIOSK ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:28.542985+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT HAS_KIOSK, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY HAS_KIOSK ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:28.560986+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.08402538299560547, "code_block": "st.bar_chart(data=df, x=\"HAS_KIOSK\", y=\"NUM_STATIONS\", x_label=\"Has Kiosk\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:32:28.598988+00:00", "level": "INFO", "logger": "snowgpt", "message": "User interaction: user_input", "module": "st_utils", "function": "log_user_interaction", "line": 105}
{"timestamp": "2025-06-23T00:32:41.863913+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CAST(LAT AS FLOAT) AS LATITUDE, CAST(LON AS FLOAT) AS LONGITUDE, NAME AS STATION_NAME, STATION_ID\nFROM PUBLIC.STATION_INFO_FLATTEN;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:42.156313+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CAST(LAT AS FLOAT) AS LATITUDE, CAST(LON AS FLOAT) AS LONGITUDE, NAME AS STATION_NAME, STATION_ID\nFROM PUBLIC.STATION_INFO_FLATTEN;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:32:43.458525+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT DATE_TRUNC('day', LAST_UPDATED) AS DAY, STATION_STATUS::STRING, COUNT(DISTINCT STATION_ID) AS STATION_COUNT\nFROM PUBLIC.STATION_STATUS_FLATTEN_FULL\nGROUP BY DAY, STATION_STATUS::STRING\nORDER BY DAY, STATION_STATUS::STRING;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:33:33.939418+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT DATE_TRUNC('day', LAST_UPDATED) AS DAY, STATION_STATUS::STRING, COUNT(DISTINCT STATION_ID) AS STATION_COUNT\nFROM PUBLIC.STATION_STATUS_FLATTEN_FULL\nGROUP BY DAY, STATION_STATUS::STRING\nORDER BY DAY, STATION_STATUS::STRING;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:33:36.951897+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATION_STATUS::STRING, COUNT(DISTINCT STATION_ID) AS STATION_COUNT\nFROM PUBLIC.STATION_STATUS_FLATTEN_FULL\nWHERE LAST_UPDATED = (SELECT MAX(LAST_UPDATED) FROM PUBLIC.STATION_STATUS_FLATTEN_FULL)\nGROUP BY STATION_STATUS::STRING\nORDER BY STATION_COUNT DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:33:37.112964+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATION_STATUS::STRING, COUNT(DISTINCT STATION_ID) AS STATION_COUNT\nFROM PUBLIC.STATION_STATUS_FLATTEN_FULL\nWHERE LAST_UPDATED = (SELECT MAX(LAST_UPDATED) FROM PUBLIC.STATION_STATUS_FLATTEN_FULL)\nGROUP BY STATION_STATUS::STRING\nORDER BY STATION_COUNT DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:33:38.357796+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT i.NAME AS STATION_NAME, s.NUM_DOCKS_AVAILABLE::INTEGER AS AVAILABLE_DOCKS\nFROM PUBLIC.STATION_STATUS_FLATTEN_FULL s\nJOIN PUBLIC.STATION_INFO_FLATTEN i ON s.STATION_ID = i.STATION_ID\nWHERE s.LAST_UPDATED = (SELECT MAX(LAST_UPDATED) FROM PUBLIC.STATION_STATUS_FLATTEN_FULL)\nORDER BY AVAILABLE_DOCKS DESC\nLIMIT 10;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:33:38.636649+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT i.NAME AS STATION_NAME, s.NUM_DOCKS_AVAILABLE::INTEGER AS AVAILABLE_DOCKS\nFROM PUBLIC.STATION_STATUS_FLATTEN_FULL s\nJOIN PUBLIC.STATION_INFO_FLATTEN i ON s.STATION_ID = i.STATION_ID\nWHERE s.LAST_UPDATED = (SELECT MAX(LAST_UPDATED) FROM PUBLIC.STATION_STATUS_FLATTEN_FULL)\nORDER BY AVAILABLE_DOCKS DESC\nLIMIT 10;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:33:40.456359+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT SUM(NUM_EBIKES_AVAILABLE::INTEGER) AS EBIKES, SUM(NUM_BIKES_AVAILABLE::INTEGER) - SUM(NUM_EBIKES_AVAILABLE::INTEGER) AS CLASSIC_BIKES\nFROM PUBLIC.STATION_STATUS_FLATTEN_FULL\nWHERE LAST_UPDATED = (SELECT MAX(LAST_UPDATED) FROM PUBLIC.STATION_STATUS_FLATTEN_FULL);", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:33:40.662930+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT SUM(NUM_EBIKES_AVAILABLE::INTEGER) AS EBIKES, SUM(NUM_BIKES_AVAILABLE::INTEGER) - SUM(NUM_EBIKES_AVAILABLE::INTEGER) AS CLASSIC_BIKES\nFROM PUBLIC.STATION_STATUS_FLATTEN_FULL\nWHERE LAST_UPDATED = (SELECT MAX(LAST_UPDATED) FROM PUBLIC.STATION_STATUS_FLATTEN_FULL);", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:33:41.870746+00:00", "level": "INFO", "logger": "snowgpt", "message": "Agent dashboard_agent execution completed", "module": "st_utils", "function": "log_agent_performance", "line": 120, "agent_type": "dashboard_agent", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:33:41.872746+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.map(df[[\"LATITUDE\", \"LONGITUDE\"]], latitude=\"LATITUDE\", longitude=\"LONGITUDE\")"}
{"timestamp": "2025-06-23T00:33:41.873747+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CAST(LAT AS FLOAT) AS LATITUDE, CAST(LON AS FLOAT) AS LONGITUDE, NAME AS STATION_NAME, STATION_ID\nFROM PUBLIC.STATION_INFO_FLATTEN;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:33:42.336567+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CAST(LAT AS FLOAT) AS LATITUDE, CAST(LON AS FLOAT) AS LONGITUDE, NAME AS STATION_NAME, STATION_ID\nFROM PUBLIC.STATION_INFO_FLATTEN;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:33:42.353567+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.46282100677490234, "code_block": "st.map(df[[\"LATITUDE\", \"LONGITUDE\"]], latitude=\"LATITUDE\", longitude=\"LONGITUDE\")"}
{"timestamp": "2025-06-23T00:33:42.354567+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "import streamlit as st\n# Line chart of station count by day and status\ndf_status_trend = df.pivot_table(index=\"DAY\", columns=\"STATION_STATUS::STRING\", values=\"STATION_COUNT\", aggfunc=\"sum\")\nst.line_chart(df_status_trend, use_container_width=True)\n\n# Bar chart summarizing current status counts (get the latest DAY)\nlatest_day = df[\"DAY\"].max()\ndf_latest = df[df[\"DAY\"] == latest_day]\nst.bar_chart(data=df_latest, x=\"STATION_STATUS::STRING\", y=\"STATION_COUNT\", x_label=\"Status\", y_label=\"Station Count\", use_container_width=True)\n"}
{"timestamp": "2025-06-23T00:33:42.356568+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT DATE_TRUNC('day', LAST_UPDATED) AS DAY, STATION_STATUS::STRING, COUNT(DISTINCT STATION_ID) AS STATION_COUNT\nFROM PUBLIC.STATION_STATUS_FLATTEN_FULL\nGROUP BY DAY, STATION_STATUS::STRING\nORDER BY DAY, STATION_STATUS::STRING;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:33:42.506574+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT DATE_TRUNC('day', LAST_UPDATED) AS DAY, STATION_STATUS::STRING, COUNT(DISTINCT STATION_ID) AS STATION_COUNT\nFROM PUBLIC.STATION_STATUS_FLATTEN_FULL\nGROUP BY DAY, STATION_STATUS::STRING\nORDER BY DAY, STATION_STATUS::STRING;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:33:42.660571+00:00", "level": "ERROR", "logger": "snowgpt", "message": "Chart execution failed", "module": "st_utils", "function": "render_visualization", "line": 77, "code_block": "import streamlit as st\n# Line chart of station count by day and status\ndf_status_trend = df.pivot_table(index=\"DAY\", columns=\"STATION_STATUS::STRING\", values=\"STATION_COUNT\", aggfunc=\"sum\")\nst.line_chart(df_status_trend, use_container_width=True)\n\n# Bar chart summarizing current status counts (get the latest DAY)\nlatest_day = df[\"DAY\"].max()\ndf_latest = df[df[\"DAY\"] == latest_day]\nst.bar_chart(data=df_latest, x=\"STATION_STATUS::STRING\", y=\"STATION_COUNT\", x_label=\"Status\", y_label=\"Station Count\", use_container_width=True)\n"}
{"timestamp": "2025-06-23T00:33:42.662570+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.15000629425048828, "code_block": "import streamlit as st\n# Line chart of station count by day and status\ndf_status_trend = df.pivot_table(index=\"DAY\", columns=\"STATION_STATUS::STRING\", values=\"STATION_COUNT\", aggfunc=\"sum\")\nst.line_chart(df_status_trend, use_container_width=True)\n\n# Bar chart summarizing current status counts (get the latest DAY)\nlatest_day = df[\"DAY\"].max()\ndf_latest = df[df[\"DAY\"] == latest_day]\nst.bar_chart(data=df_latest, x=\"STATION_STATUS::STRING\", y=\"STATION_COUNT\", x_label=\"Status\", y_label=\"Station Count\", use_container_width=True)\n"}
{"timestamp": "2025-06-23T00:33:42.663571+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": ""}
{"timestamp": "2025-06-23T00:33:42.666571+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATION_STATUS::STRING, COUNT(DISTINCT STATION_ID) AS STATION_COUNT\nFROM PUBLIC.STATION_STATUS_FLATTEN_FULL\nWHERE LAST_UPDATED = (SELECT MAX(LAST_UPDATED) FROM PUBLIC.STATION_STATUS_FLATTEN_FULL)\nGROUP BY STATION_STATUS::STRING\nORDER BY STATION_COUNT DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:33:42.796569+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATION_STATUS::STRING, COUNT(DISTINCT STATION_ID) AS STATION_COUNT\nFROM PUBLIC.STATION_STATUS_FLATTEN_FULL\nWHERE LAST_UPDATED = (SELECT MAX(LAST_UPDATED) FROM PUBLIC.STATION_STATUS_FLATTEN_FULL)\nGROUP BY STATION_STATUS::STRING\nORDER BY STATION_COUNT DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:33:42.804575+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.13100099563598633, "code_block": ""}
{"timestamp": "2025-06-23T00:33:42.811570+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:33:43.186568+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:33:44.928312+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:44:25.661485+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T00:44:25.662485+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T00:44:25.665489+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:44:26.096867+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:44:29.133903+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T00:44:29.133903+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T00:44:29.135904+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:44:29.459692+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:44:30.702801+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": null}
{"timestamp": "2025-06-23T00:44:30.767804+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:44:30.927546+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:45:11.031936+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T00:45:11.032940+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T00:45:11.034938+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:45:11.388264+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T00:45:12.603197+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": null}
{"timestamp": "2025-06-23T00:45:12.675823+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:45:12.962206+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:45:13.063208+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "import pandas as pd\n\ndf['LAT'] = pd.to_numeric(df['LAT'], errors='coerce')\ndf['LON'] = pd.to_numeric(df['LON'], errors='coerce')\n\nst.map(df[['LAT', 'LON']].rename(columns={'LAT': 'lat', 'LON': 'lon'}))"}
{"timestamp": "2025-06-23T00:45:13.065207+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT NAME, LAT, LON, CAPACITY FROM PUBLIC.STATION_INFO_FLATTEN WHERE LAT IS NOT NULL AND LON IS NOT NULL;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:45:13.257226+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT NAME, LAT, LON, CAPACITY FROM PUBLIC.STATION_INFO_FLATTEN WHERE LAT IS NOT NULL AND LON IS NOT NULL;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:45:13.321226+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.19301748275756836, "code_block": "import pandas as pd\n\ndf['LAT'] = pd.to_numeric(df['LAT'], errors='coerce')\ndf['LON'] = pd.to_numeric(df['LON'], errors='coerce')\n\nst.map(df[['LAT', 'LON']].rename(columns={'LAT': 'lat', 'LON': 'lon'}))"}
{"timestamp": "2025-06-23T00:45:13.322233+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"CAPACITY\", y=\"NUM_STATIONS\", x_label=\"Capacity\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:45:13.324233+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CAPACITY::INTEGER AS CAPACITY, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE CAPACITY IS NOT NULL GROUP BY CAPACITY::INTEGER ORDER BY CAPACITY::INTEGER ASC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:45:13.446337+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CAPACITY::INTEGER AS CAPACITY, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE CAPACITY IS NOT NULL GROUP BY CAPACITY::INTEGER ORDER BY CAPACITY::INTEGER ASC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:45:13.474341+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.12310361862182617, "code_block": "st.bar_chart(data=df, x=\"CAPACITY\", y=\"NUM_STATIONS\", x_label=\"Capacity\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:45:13.476338+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x='STATION_TYPE', y='NUM_STATIONS', x_label='Station Type', y_label='Number of Stations', use_container_width=True)"}
{"timestamp": "2025-06-23T00:45:13.478337+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATION_TYPE, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE STATION_TYPE IS NOT NULL GROUP BY STATION_TYPE ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:45:13.607339+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATION_TYPE, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN WHERE STATION_TYPE IS NOT NULL GROUP BY STATION_TYPE ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:45:13.648337+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.13000082969665527, "code_block": "st.bar_chart(data=df, x='STATION_TYPE', y='NUM_STATIONS', x_label='Station Type', y_label='Number of Stations', use_container_width=True)"}
{"timestamp": "2025-06-23T00:45:13.650342+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"HAS_KIOSK\", y=\"NUM_STATIONS\", x_label=\"Has Kiosk\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:45:13.656341+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT HAS_KIOSK, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY HAS_KIOSK ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:45:13.806340+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT HAS_KIOSK, COUNT(*) AS NUM_STATIONS FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY HAS_KIOSK ORDER BY NUM_STATIONS DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:45:13.837343+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.1529994010925293, "code_block": "st.bar_chart(data=df, x=\"HAS_KIOSK\", y=\"NUM_STATIONS\", x_label=\"Has Kiosk\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T00:45:13.927340+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.map(df[[\"LATITUDE\", \"LONGITUDE\"]], latitude=\"LATITUDE\", longitude=\"LONGITUDE\")"}
{"timestamp": "2025-06-23T00:45:13.929340+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CAST(LAT AS FLOAT) AS LATITUDE, CAST(LON AS FLOAT) AS LONGITUDE, NAME AS STATION_NAME, STATION_ID\nFROM PUBLIC.STATION_INFO_FLATTEN;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:45:14.336433+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CAST(LAT AS FLOAT) AS LATITUDE, CAST(LON AS FLOAT) AS LONGITUDE, NAME AS STATION_NAME, STATION_ID\nFROM PUBLIC.STATION_INFO_FLATTEN;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:45:14.368428+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.4070930480957031, "code_block": "st.map(df[[\"LATITUDE\", \"LONGITUDE\"]], latitude=\"LATITUDE\", longitude=\"LONGITUDE\")"}
{"timestamp": "2025-06-23T00:45:14.370428+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "import streamlit as st\n# Line chart of station count by day and status\ndf_status_trend = df.pivot_table(index=\"DAY\", columns=\"STATION_STATUS::STRING\", values=\"STATION_COUNT\", aggfunc=\"sum\")\nst.line_chart(df_status_trend, use_container_width=True)\n\n# Bar chart summarizing current status counts (get the latest DAY)\nlatest_day = df[\"DAY\"].max()\ndf_latest = df[df[\"DAY\"] == latest_day]\nst.bar_chart(data=df_latest, x=\"STATION_STATUS::STRING\", y=\"STATION_COUNT\", x_label=\"Status\", y_label=\"Station Count\", use_container_width=True)\n"}
{"timestamp": "2025-06-23T00:45:14.374427+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT DATE_TRUNC('day', LAST_UPDATED) AS DAY, STATION_STATUS::STRING, COUNT(DISTINCT STATION_ID) AS STATION_COUNT\nFROM PUBLIC.STATION_STATUS_FLATTEN_FULL\nGROUP BY DAY, STATION_STATUS::STRING\nORDER BY DAY, STATION_STATUS::STRING;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:45:14.491475+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT DATE_TRUNC('day', LAST_UPDATED) AS DAY, STATION_STATUS::STRING, COUNT(DISTINCT STATION_ID) AS STATION_COUNT\nFROM PUBLIC.STATION_STATUS_FLATTEN_FULL\nGROUP BY DAY, STATION_STATUS::STRING\nORDER BY DAY, STATION_STATUS::STRING;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:45:14.617471+00:00", "level": "ERROR", "logger": "snowgpt", "message": "Chart execution failed", "module": "st_utils", "function": "render_visualization", "line": 77, "code_block": "import streamlit as st\n# Line chart of station count by day and status\ndf_status_trend = df.pivot_table(index=\"DAY\", columns=\"STATION_STATUS::STRING\", values=\"STATION_COUNT\", aggfunc=\"sum\")\nst.line_chart(df_status_trend, use_container_width=True)\n\n# Bar chart summarizing current status counts (get the latest DAY)\nlatest_day = df[\"DAY\"].max()\ndf_latest = df[df[\"DAY\"] == latest_day]\nst.bar_chart(data=df_latest, x=\"STATION_STATUS::STRING\", y=\"STATION_COUNT\", x_label=\"Status\", y_label=\"Station Count\", use_container_width=True)\n"}
{"timestamp": "2025-06-23T00:45:14.620472+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.11904644966125488, "code_block": "import streamlit as st\n# Line chart of station count by day and status\ndf_status_trend = df.pivot_table(index=\"DAY\", columns=\"STATION_STATUS::STRING\", values=\"STATION_COUNT\", aggfunc=\"sum\")\nst.line_chart(df_status_trend, use_container_width=True)\n\n# Bar chart summarizing current status counts (get the latest DAY)\nlatest_day = df[\"DAY\"].max()\ndf_latest = df[df[\"DAY\"] == latest_day]\nst.bar_chart(data=df_latest, x=\"STATION_STATUS::STRING\", y=\"STATION_COUNT\", x_label=\"Status\", y_label=\"Station Count\", use_container_width=True)\n"}
{"timestamp": "2025-06-23T00:45:14.621471+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": ""}
{"timestamp": "2025-06-23T00:45:14.623470+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATION_STATUS::STRING, COUNT(DISTINCT STATION_ID) AS STATION_COUNT\nFROM PUBLIC.STATION_STATUS_FLATTEN_FULL\nWHERE LAST_UPDATED = (SELECT MAX(LAST_UPDATED) FROM PUBLIC.STATION_STATUS_FLATTEN_FULL)\nGROUP BY STATION_STATUS::STRING\nORDER BY STATION_COUNT DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:45:14.730001+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATION_STATUS::STRING, COUNT(DISTINCT STATION_ID) AS STATION_COUNT\nFROM PUBLIC.STATION_STATUS_FLATTEN_FULL\nWHERE LAST_UPDATED = (SELECT MAX(LAST_UPDATED) FROM PUBLIC.STATION_STATUS_FLATTEN_FULL)\nGROUP BY STATION_STATUS::STRING\nORDER BY STATION_COUNT DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:45:14.736005+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.10653162002563477, "code_block": ""}
{"timestamp": "2025-06-23T00:45:14.742005+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:45:15.038041+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T00:45:16.788421+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:58:46.173671+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T01:58:46.174673+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T01:58:46.215330+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T01:58:47.014057+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T01:58:47.876710+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": null}
{"timestamp": "2025-06-23T01:58:47.955734+00:00", "level": "INFO", "logger": "snowgpt", "message": "Database/Schema context changed", "module": "app", "function": "<module>", "line": 100}
{"timestamp": "2025-06-23T01:58:47.956737+00:00", "level": "INFO", "logger": "snowgpt", "message": "Session state reset due to context change", "module": "app", "function": "<module>", "line": 117}
{"timestamp": "2025-06-23T01:58:47.956737+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:58:48.255350+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:58:48.316565+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:58:48.511314+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:58:50.389617+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:58:53.387204+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T01:58:53.388205+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T01:58:53.390204+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T01:58:53.701820+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T01:58:54.546830+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": null}
{"timestamp": "2025-06-23T01:58:54.607928+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:58:54.937847+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:58:54.967848+00:00", "level": "INFO", "logger": "snowgpt", "message": "User interaction: user_input", "module": "st_utils", "function": "log_user_interaction", "line": 105}
{"timestamp": "2025-06-23T01:58:58.639106+00:00", "level": "INFO", "logger": "snowgpt", "message": "Agent routing_agent execution completed", "module": "st_utils", "function": "log_agent_performance", "line": 120, "agent_type": "routing_agent"}
{"timestamp": "2025-06-23T01:58:58.752618+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T01:58:58.753621+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T01:58:58.755619+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T01:58:59.037619+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T01:58:59.800198+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": null}
{"timestamp": "2025-06-23T01:58:59.867195+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:00.037486+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:00.123492+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:00.431648+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:02.104781+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:10.363156+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T01:59:10.364154+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T01:59:10.366157+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T01:59:10.693500+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T01:59:11.554954+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": null}
{"timestamp": "2025-06-23T01:59:11.614957+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:11.897970+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:11.968975+00:00", "level": "INFO", "logger": "snowgpt", "message": "User interaction: user_input", "module": "st_utils", "function": "log_user_interaction", "line": 105}
{"timestamp": "2025-06-23T01:59:20.956625+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT NAME, LON::FLOAT AS longitude, LAT::FLOAT AS latitude FROM PUBLIC.STATION_INFO_FLATTEN;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:21.280503+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT NAME, LON::FLOAT AS longitude, LAT::FLOAT AS latitude FROM PUBLIC.STATION_INFO_FLATTEN;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:22.525466+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CAPACITY::INTEGER AS capacity, COUNT(*) AS station_count FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY CAPACITY::INTEGER ORDER BY capacity;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:22.694456+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CAPACITY::INTEGER AS capacity, COUNT(*) AS station_count FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY CAPACITY::INTEGER ORDER BY capacity;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:24.739492+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATION_TYPE, COUNT(*) AS station_count FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY STATION_TYPE ORDER BY station_count DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:24.931157+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATION_TYPE, COUNT(*) AS station_count FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY STATION_TYPE ORDER BY station_count DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:26.655844+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT HAS_KIOSK, COUNT(*) AS count FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY HAS_KIOSK;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:26.834879+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT HAS_KIOSK, COUNT(*) AS count FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY HAS_KIOSK;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:28.167095+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT REGION_ID, COUNT(*) AS station_count FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY REGION_ID ORDER BY station_count DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:28.402069+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT REGION_ID, COUNT(*) AS station_count FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY REGION_ID ORDER BY station_count DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:30.553072+00:00", "level": "INFO", "logger": "snowgpt", "message": "Agent dashboard_agent execution completed", "module": "st_utils", "function": "log_agent_performance", "line": 120, "agent_type": "dashboard_agent", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:30.555076+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.map(data=df, latitude=\"LATITUDE\", longitude=\"LONGITUDE\", use_container_width=True)"}
{"timestamp": "2025-06-23T01:59:30.559070+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT NAME, LON::FLOAT AS longitude, LAT::FLOAT AS latitude FROM PUBLIC.STATION_INFO_FLATTEN;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:30.704824+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT NAME, LON::FLOAT AS longitude, LAT::FLOAT AS latitude FROM PUBLIC.STATION_INFO_FLATTEN;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:30.733836+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.14775347709655762, "code_block": "st.map(data=df, latitude=\"LATITUDE\", longitude=\"LONGITUDE\", use_container_width=True)"}
{"timestamp": "2025-06-23T01:59:30.735865+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x='CAPACITY', y='STATION_COUNT', x_label='Capacity', y_label='Number of Stations', use_container_width=True)"}
{"timestamp": "2025-06-23T01:59:30.737839+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CAPACITY::INTEGER AS capacity, COUNT(*) AS station_count FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY CAPACITY::INTEGER ORDER BY capacity;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:30.863837+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CAPACITY::INTEGER AS capacity, COUNT(*) AS station_count FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY CAPACITY::INTEGER ORDER BY capacity;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:32.740034+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.12699317932128906, "code_block": "st.bar_chart(data=df, x='CAPACITY', y='STATION_COUNT', x_label='Capacity', y_label='Number of Stations', use_container_width=True)"}
{"timestamp": "2025-06-23T01:59:32.744035+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"STATION_TYPE\", y=\"STATION_COUNT\", x_label=\"Station Type\", y_label=\"Station Count\", use_container_width=True)"}
{"timestamp": "2025-06-23T01:59:32.747035+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATION_TYPE, COUNT(*) AS station_count FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY STATION_TYPE ORDER BY station_count DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:32.841782+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATION_TYPE, COUNT(*) AS station_count FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY STATION_TYPE ORDER BY station_count DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:32.875784+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.09674453735351562, "code_block": "st.bar_chart(data=df, x=\"STATION_TYPE\", y=\"STATION_COUNT\", x_label=\"Station Type\", y_label=\"Station Count\", use_container_width=True)"}
{"timestamp": "2025-06-23T01:59:32.876785+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"HAS_KIOSK\", y=\"COUNT\", x_label=\"Has Kiosk\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T01:59:32.879783+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT HAS_KIOSK, COUNT(*) AS count FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY HAS_KIOSK;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:32.961781+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT HAS_KIOSK, COUNT(*) AS count FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY HAS_KIOSK;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:32.985786+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.0829932689666748, "code_block": "st.bar_chart(data=df, x=\"HAS_KIOSK\", y=\"COUNT\", x_label=\"Has Kiosk\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T01:59:32.986786+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"REGION_ID\", y=\"STATION_COUNT\", x_label=\"Region ID\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T01:59:32.988783+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT REGION_ID, COUNT(*) AS station_count FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY REGION_ID ORDER BY station_count DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:33.100779+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT REGION_ID, COUNT(*) AS station_count FROM PUBLIC.STATION_INFO_FLATTEN GROUP BY REGION_ID ORDER BY station_count DESC;", "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:33.125781+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.1129913330078125, "code_block": "st.bar_chart(data=df, x=\"REGION_ID\", y=\"STATION_COUNT\", x_label=\"Region ID\", y_label=\"Number of Stations\", use_container_width=True)"}
{"timestamp": "2025-06-23T01:59:33.130779+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:33.450782+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T01:59:35.066600+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T13:53:28.473822+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T13:53:28.475818+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T13:53:28.503821+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T13:53:29.316896+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T13:53:30.195856+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": null}
{"timestamp": "2025-06-23T13:53:30.265855+00:00", "level": "INFO", "logger": "snowgpt", "message": "Database/Schema context changed", "module": "app", "function": "<module>", "line": 100}
{"timestamp": "2025-06-23T13:53:30.266855+00:00", "level": "INFO", "logger": "snowgpt", "message": "Session state reset due to context change", "module": "app", "function": "<module>", "line": 117}
{"timestamp": "2025-06-23T13:53:30.267855+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T13:53:30.635704+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T13:53:30.821543+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T13:53:31.138528+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T13:53:33.447761+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "CHICAGO_DIVVY_BIKE_STATION_STATUS", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T13:53:34.425311+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T13:53:34.427314+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T13:53:34.430313+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T13:53:34.633740+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T13:53:35.504279+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "SANDBOX", "schema": null}
{"timestamp": "2025-06-23T13:53:35.568280+00:00", "level": "INFO", "logger": "snowgpt", "message": "Database/Schema context changed", "module": "app", "function": "<module>", "line": 100}
{"timestamp": "2025-06-23T13:53:35.570280+00:00", "level": "INFO", "logger": "snowgpt", "message": "Session state reset due to context change", "module": "app", "function": "<module>", "line": 117}
{"timestamp": "2025-06-23T13:53:35.571280+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T13:53:35.946279+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T13:53:35.985284+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T13:53:36.316842+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "PUBLIC"}
{"timestamp": "2025-06-23T13:53:37.756260+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T13:53:37.757258+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T13:53:37.759263+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T13:53:38.055911+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T13:53:38.853499+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "SANDBOX", "schema": null}
{"timestamp": "2025-06-23T13:53:38.921049+00:00", "level": "INFO", "logger": "snowgpt", "message": "Database/Schema context changed", "module": "app", "function": "<module>", "line": 100}
{"timestamp": "2025-06-23T13:53:38.922062+00:00", "level": "INFO", "logger": "snowgpt", "message": "Session state reset due to context change", "module": "app", "function": "<module>", "line": 117}
{"timestamp": "2025-06-23T13:53:38.922062+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:53:39.110401+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:53:39.139401+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:53:39.321884+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:53:40.931686+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T13:53:40.931686+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T13:53:40.933687+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T13:53:41.304011+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T13:53:42.117512+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "SANDBOX", "schema": null}
{"timestamp": "2025-06-23T13:53:42.193564+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:53:42.512594+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:53:42.538595+00:00", "level": "INFO", "logger": "snowgpt", "message": "User interaction: user_input", "module": "st_utils", "function": "log_user_interaction", "line": 105}
{"timestamp": "2025-06-23T13:53:46.088689+00:00", "level": "INFO", "logger": "snowgpt", "message": "Agent routing_agent execution completed", "module": "st_utils", "function": "log_agent_performance", "line": 120, "agent_type": "routing_agent"}
{"timestamp": "2025-06-23T13:53:46.190880+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T13:53:46.191879+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T13:53:46.193881+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T13:53:46.560035+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T13:53:47.527602+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "SANDBOX", "schema": null}
{"timestamp": "2025-06-23T13:53:47.590559+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:53:47.968008+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:53:48.041009+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:53:48.249406+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:53:50.086154+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:53:59.129271+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T13:53:59.130271+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T13:53:59.131271+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T13:53:59.438551+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T13:54:00.241132+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "SANDBOX", "schema": null}
{"timestamp": "2025-06-23T13:54:00.393223+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:00.683427+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:00.758429+00:00", "level": "INFO", "logger": "snowgpt", "message": "User interaction: user_input", "module": "st_utils", "function": "log_user_interaction", "line": 105}
{"timestamp": "2025-06-23T13:54:04.214890+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T13:54:04.215873+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T13:54:04.216879+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T13:54:04.403886+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T13:54:05.373655+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "SANDBOX", "schema": null}
{"timestamp": "2025-06-23T13:54:05.430657+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:05.726145+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:05.828220+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:06.016324+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:07.753214+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:08.450729+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T13:54:08.451728+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T13:54:08.453730+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T13:54:08.773130+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T13:54:09.645955+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "SANDBOX", "schema": null}
{"timestamp": "2025-06-23T13:54:09.700898+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:09.863480+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:09.956483+00:00", "level": "INFO", "logger": "snowgpt", "message": "User interaction: user_input", "module": "st_utils", "function": "log_user_interaction", "line": 105}
{"timestamp": "2025-06-23T13:54:30.274902+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:30.338698+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:32.261595+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:32.313639+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:45.323026+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:45.392220+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:47.108092+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:47.230545+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:48.975071+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:49.089284+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:50.516922+00:00", "level": "INFO", "logger": "snowgpt", "message": "Agent dashboard_agent execution completed", "module": "st_utils", "function": "log_agent_performance", "line": 120, "agent_type": "dashboard_agent", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:50.518910+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:54:50.520914+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:50.604914+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:51.817910+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.08600330352783203, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:54:51.817910+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:54:51.819910+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:51.885241+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:51.912234+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.06533098220825195, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:54:51.914234+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:54:51.916233+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:51.977296+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:51.998819+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.06205916404724121, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:54:51.999819+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:54:52.001818+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:52.057817+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:52.079820+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.055998802185058594, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:54:52.080819+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:54:52.083818+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:52.150822+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:52.182818+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.06900191307067871, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:54:52.186820+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:52.566879+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:54:54.248299+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:28.042580+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T13:57:28.043578+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T13:57:28.045578+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T13:57:28.373577+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T13:57:29.212661+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "SANDBOX", "schema": null}
{"timestamp": "2025-06-23T13:57:29.278685+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:29.588508+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:29.698516+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:57:29.700518+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:29.765890+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:29.834889+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.06635689735412598, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:57:29.836894+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:57:29.837890+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:29.924951+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:29.943955+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.08706116676330566, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:57:29.945955+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:57:29.946954+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:30.004952+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:30.028003+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.06103396415710449, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:57:30.029004+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:57:30.031005+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:30.099003+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:30.119015+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.0690000057220459, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:57:30.120004+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:57:30.122003+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:30.202001+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:30.227002+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.08099961280822754, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:57:30.231001+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:30.417016+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:32.118605+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT YEAR(ORDERDATE), SUM(SALES) AS TOTAL_SALES\r\nFROM SUPERSTORE.SUPERSTORE_SALES\r\nGROUP BY YEAR(ORDERDATE)\r\nORDER BY YEAR(ORDERDATE);", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:32.240114+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT YEAR(ORDERDATE), SUM(SALES) AS TOTAL_SALES\r\nFROM SUPERSTORE.SUPERSTORE_SALES\r\nGROUP BY YEAR(ORDERDATE)\r\nORDER BY YEAR(ORDERDATE);", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:32.243113+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:35.785527+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T13:57:35.786527+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T13:57:35.788530+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T13:57:36.078157+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T13:57:36.855085+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "SANDBOX", "schema": null}
{"timestamp": "2025-06-23T13:57:36.932087+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:37.119058+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:37.224073+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:57:37.226060+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:37.295058+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:37.361059+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.06998896598815918, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:57:37.362061+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:57:37.364062+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:37.418066+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:37.438057+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.05599808692932129, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:57:37.440058+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:57:37.442059+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:37.507056+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:37.525056+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.06698799133300781, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:57:37.526060+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:57:37.528057+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:37.582058+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:37.603058+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.0560150146484375, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:57:37.604059+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:57:37.606056+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:37.692056+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:37.721057+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.08600020408630371, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:57:37.724058+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:38.020437+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:39.785106+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT YEAR(ORDERDATE), SUM(SALES) AS TOTAL_SALES\r\nFROM SUPERSTORE.SUPERSTORE_SALES\r\nGROUP BY YEAR(ORDERDATE)\r\nORDER BY YEAR(ORDERDATE);", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:39.838868+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT YEAR(ORDERDATE), SUM(SALES) AS TOTAL_SALES\r\nFROM SUPERSTORE.SUPERSTORE_SALES\r\nGROUP BY YEAR(ORDERDATE)\r\nORDER BY YEAR(ORDERDATE);", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:57:47.511061+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:59:46.395821+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T13:59:46.396820+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T13:59:46.398822+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T13:59:46.742821+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T13:59:47.668380+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "SANDBOX", "schema": null}
{"timestamp": "2025-06-23T13:59:48.418936+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:59:48.734659+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:59:48.894661+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:59:48.897661+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:59:48.956659+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:59:49.018659+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.05999755859375, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:59:49.019659+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:59:49.021660+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:59:49.083661+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:59:49.103662+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.06299805641174316, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:59:49.106661+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:59:49.108662+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:59:49.169660+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:59:49.190665+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.06300234794616699, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:59:49.190665+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:59:49.192666+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:59:49.262296+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:59:49.291294+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.07163238525390625, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:59:49.293296+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:59:49.296300+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:59:49.370298+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:59:49.394294+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.07599735260009766, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:59:49.396293+00:00", "level": "INFO", "logger": "snowgpt", "message": "User interaction: user_input", "module": "st_utils", "function": "log_user_interaction", "line": 105}
{"timestamp": "2025-06-23T13:59:52.964640+00:00", "level": "INFO", "logger": "snowgpt", "message": "Agent routing_agent execution completed", "module": "st_utils", "function": "log_agent_performance", "line": 120, "agent_type": "routing_agent"}
{"timestamp": "2025-06-23T13:59:53.085636+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T13:59:53.086636+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T13:59:53.087636+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T13:59:53.256151+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T13:59:54.093076+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "SANDBOX", "schema": null}
{"timestamp": "2025-06-23T13:59:54.156073+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:59:54.325657+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:59:54.426652+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:59:54.427652+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:59:54.499657+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:59:54.565243+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.07200503349304199, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:59:54.566227+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:59:54.568226+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:59:54.635224+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:59:54.654222+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.0690000057220459, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:59:54.656224+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:59:54.658223+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:59:54.715225+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:59:54.736223+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.05900311470031738, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:59:54.737227+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:59:54.738224+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:59:54.803225+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:59:54.822227+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.0650014877319336, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:59:54.823223+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:59:54.824224+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:59:54.913368+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:59:54.943529+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.09014439582824707, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T13:59:54.968579+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:59:55.256560+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T13:59:56.856678+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:00:07.626721+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T14:00:07.627717+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T14:00:07.628719+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T14:00:08.087426+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T14:00:08.934269+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "SANDBOX", "schema": null}
{"timestamp": "2025-06-23T14:00:09.002267+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:00:09.414379+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:00:09.518686+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:00:09.520682+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:00:09.580683+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:00:09.640683+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.06101512908935547, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:00:09.641680+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:00:09.642684+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:00:09.716680+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:00:09.733683+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.0749964714050293, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:00:09.735684+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:00:09.736684+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:00:09.798683+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:00:09.817681+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.06299757957458496, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:00:09.817681+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:00:09.819688+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:00:09.883684+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:00:09.902687+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.0650022029876709, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:00:09.903687+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:00:09.905682+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:00:10.006154+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:00:10.031152+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.10246706008911133, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:00:10.054158+00:00", "level": "INFO", "logger": "snowgpt", "message": "User interaction: user_input", "module": "st_utils", "function": "log_user_interaction", "line": 105}
{"timestamp": "2025-06-23T14:00:45.347814+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:00:45.733121+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:00:48.637079+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:00:49.005304+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:00:51.107530+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:00:51.172011+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:00:57.416841+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:00:57.462633+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:00:59.458459+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:00:59.523458+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:01.345738+00:00", "level": "INFO", "logger": "snowgpt", "message": "Agent dashboard_agent execution completed", "module": "st_utils", "function": "log_agent_performance", "line": 120, "agent_type": "dashboard_agent", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:01.347739+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:01.349736+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:01.439018+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:01.517016+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.09028053283691406, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:01.518015+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:01.520020+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:01.578537+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:01.599543+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.060516357421875, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:01.601539+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:01.604539+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:01.671544+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:01.693538+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.06899738311767578, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:01.694538+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:01.697538+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:01.747535+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:01.767535+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.05099749565124512, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:01.768538+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:01.769535+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:01.837051+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:01.864053+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.06851673126220703, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:01.867056+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:02.240090+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:03.993694+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT YEAR(ORDERDATE), SUM(SALES) AS TOTAL_SALES\r\nFROM SUPERSTORE.SUPERSTORE_SALES\r\nGROUP BY YEAR(ORDERDATE)\r\nORDER BY YEAR(ORDERDATE);", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:04.045696+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT YEAR(ORDERDATE), SUM(SALES) AS TOTAL_SALES\r\nFROM SUPERSTORE.SUPERSTORE_SALES\r\nGROUP BY YEAR(ORDERDATE)\r\nORDER BY YEAR(ORDERDATE);", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:04.049749+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:25.415031+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T14:01:25.417022+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T14:01:25.420020+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T14:01:25.732631+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T14:01:26.723666+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "SANDBOX", "schema": null}
{"timestamp": "2025-06-23T14:01:26.796676+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:27.142760+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:27.269271+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:27.271270+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:27.332805+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:27.407333+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.06153512001037598, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:27.408332+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:27.410332+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:27.477852+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:27.500857+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.06851911544799805, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:27.503856+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:27.506856+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:27.573880+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:27.596876+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.06801939010620117, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:27.597878+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:27.600879+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:27.665886+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:27.693889+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.06700658798217773, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:27.694891+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:27.696894+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:27.790412+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:27.817418+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.09451818466186523, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:27.868502+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:27.871503+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:27.944021+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:28.025023+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.0745244026184082, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:28.026023+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:28.028022+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:28.082022+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:28.108027+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.055998802185058594, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:28.111023+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:28.113555+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:28.167552+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:28.190552+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.05601310729980469, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:28.191559+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:28.194553+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:28.244550+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:28.274551+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.050997018814086914, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:28.276551+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:28.279552+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:28.357118+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:28.390720+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.07956290245056152, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:01:28.392718+00:00", "level": "INFO", "logger": "snowgpt", "message": "User interaction: user_input", "module": "st_utils", "function": "log_user_interaction", "line": 105}
{"timestamp": "2025-06-23T14:01:31.073887+00:00", "level": "INFO", "logger": "snowgpt", "message": "Agent routing_agent execution completed", "module": "st_utils", "function": "log_agent_performance", "line": 120, "agent_type": "routing_agent"}
{"timestamp": "2025-06-23T14:01:42.430459+00:00", "level": "INFO", "logger": "snowgpt", "message": "Agent sql_query_agent execution completed", "module": "st_utils", "function": "log_agent_performance", "line": 120, "agent_type": "sql_query_agent", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:42.432459+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT SUM(SALES) AS total_sales, SUM(PROFIT) AS total_profit\nFROM SUPERSTORE.SUPERSTORE_SALES\nWHERE YEAR(ORDERDATE) = 2016;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:42.537464+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT SUM(SALES) AS total_sales, SUM(PROFIT) AS total_profit\nFROM SUPERSTORE.SUPERSTORE_SALES\nWHERE YEAR(ORDERDATE) = 2016;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:44.592377+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:44.958370+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:46.639833+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT YEAR(ORDERDATE), SUM(SALES) AS TOTAL_SALES\r\nFROM SUPERSTORE.SUPERSTORE_SALES\r\nGROUP BY YEAR(ORDERDATE)\r\nORDER BY YEAR(ORDERDATE);", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:46.690864+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT YEAR(ORDERDATE), SUM(SALES) AS TOTAL_SALES\r\nFROM SUPERSTORE.SUPERSTORE_SALES\r\nGROUP BY YEAR(ORDERDATE)\r\nORDER BY YEAR(ORDERDATE);", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:01:46.694021+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:06:40.839986+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T14:06:40.840987+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T14:06:40.841989+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T14:06:41.180219+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T14:06:42.200974+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "SANDBOX", "schema": null}
{"timestamp": "2025-06-23T14:06:42.265979+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:06:42.606976+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:06:42.738981+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:06:42.740976+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:06:42.823974+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:06:42.899041+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.08399796485900879, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:06:42.900041+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:06:42.902040+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:06:42.978037+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:06:43.000041+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.0769960880279541, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:06:43.003045+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:06:43.005044+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:06:43.070040+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:06:43.090040+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.0659945011138916, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:06:43.091038+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:06:43.093040+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:06:43.152034+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:06:43.174041+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.05999302864074707, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:06:43.175039+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:06:43.177041+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:06:43.255040+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:06:43.284039+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.0800018310546875, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:06:43.330044+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:06:43.333039+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:06:43.409036+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:06:43.485034+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.07699394226074219, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:06:43.486035+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:06:43.487035+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:06:43.867038+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:06:43.885094+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.3800039291381836, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:06:43.887041+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:06:43.889043+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:06:43.945056+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:06:43.966122+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.05701470375061035, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:06:43.967120+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:06:43.970122+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:06:44.028121+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:06:44.052120+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.0599980354309082, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:06:44.053120+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:06:44.055121+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:06:44.123123+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:06:44.155122+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.0690004825592041, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:06:44.187119+00:00", "level": "INFO", "logger": "snowgpt", "message": "User interaction: user_input", "module": "st_utils", "function": "log_user_interaction", "line": 105}
{"timestamp": "2025-06-23T14:06:47.259609+00:00", "level": "INFO", "logger": "snowgpt", "message": "Agent routing_agent execution completed", "module": "st_utils", "function": "log_agent_performance", "line": 120, "agent_type": "routing_agent"}
{"timestamp": "2025-06-23T14:07:00.813525+00:00", "level": "INFO", "logger": "snowgpt", "message": "Agent sql_query_agent execution completed", "module": "st_utils", "function": "log_agent_performance", "line": 120, "agent_type": "sql_query_agent", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:00.814525+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT\n  EXTRACT(YEAR FROM SUPERSTORE_SALES.ORDERDATE) AS YEAR,\n  SUM(SUPERSTORE_SALES.SALES) AS TOTAL_SALES,\n  SUM(SUPERSTORE_SALES.PROFIT) AS TOTAL_PROFIT\nFROM\n  SUPERSTORE_SALES\nWHERE\n  SUPERSTORE_SALES.ORDERDATE BETWEEN '2015-01-01' AND '2017-12-31'\nGROUP BY\n  EXTRACT(YEAR FROM SUPERSTORE_SALES.ORDERDATE)\nORDER BY\n  YEAR;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:00.926525+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT\n  EXTRACT(YEAR FROM SUPERSTORE_SALES.ORDERDATE) AS YEAR,\n  SUM(SUPERSTORE_SALES.SALES) AS TOTAL_SALES,\n  SUM(SUPERSTORE_SALES.PROFIT) AS TOTAL_PROFIT\nFROM\n  SUPERSTORE_SALES\nWHERE\n  SUPERSTORE_SALES.ORDERDATE BETWEEN '2015-01-01' AND '2017-12-31'\nGROUP BY\n  EXTRACT(YEAR FROM SUPERSTORE_SALES.ORDERDATE)\nORDER BY\n  YEAR;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:03.371324+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:03.715068+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:05.827095+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT YEAR(ORDERDATE), SUM(SALES) AS TOTAL_SALES\r\nFROM SUPERSTORE.SUPERSTORE_SALES\r\nGROUP BY YEAR(ORDERDATE)\r\nORDER BY YEAR(ORDERDATE);", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:05.871095+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT YEAR(ORDERDATE), SUM(SALES) AS TOTAL_SALES\r\nFROM SUPERSTORE.SUPERSTORE_SALES\r\nGROUP BY YEAR(ORDERDATE)\r\nORDER BY YEAR(ORDERDATE);", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:05.874096+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:44.495127+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T14:07:44.496124+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T14:07:44.498121+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T14:07:44.825123+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T14:07:45.660039+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "SANDBOX", "schema": null}
{"timestamp": "2025-06-23T14:07:45.718041+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:46.007947+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:46.118025+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:46.120200+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:46.189073+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:46.255160+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.07004690170288086, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:46.256164+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:46.258162+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:46.344941+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:46.365035+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.08777976036071777, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:46.366033+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:46.368035+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:46.449127+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:46.469128+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.08109140396118164, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:46.470126+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:46.472126+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:46.541123+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:46.566127+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.06999564170837402, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:46.567129+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:46.569128+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:46.676229+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:46.724293+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.10910463333129883, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:46.790832+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:46.793837+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:46.871377+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:46.951465+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.0795431137084961, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:46.953469+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:46.955466+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:47.010472+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:47.037619+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.05600118637084961, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:47.041501+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:47.044500+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:47.113525+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:47.135499+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.07099580764770508, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:47.137498+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:47.139498+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:47.196502+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:47.222499+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.05900406837463379, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:47.224499+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:47.226496+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:47.318721+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:47.348722+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.09412050247192383, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:47.430717+00:00", "level": "INFO", "logger": "snowgpt", "message": "User interaction: user_input", "module": "st_utils", "function": "log_user_interaction", "line": 105}
{"timestamp": "2025-06-23T14:07:50.790486+00:00", "level": "INFO", "logger": "snowgpt", "message": "Agent routing_agent execution completed", "module": "st_utils", "function": "log_agent_performance", "line": 120, "agent_type": "routing_agent"}
{"timestamp": "2025-06-23T14:07:50.931004+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T14:07:50.932005+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T14:07:50.933005+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T14:07:51.111004+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T14:07:52.000869+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "SANDBOX", "schema": null}
{"timestamp": "2025-06-23T14:07:52.072869+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:52.444216+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:52.558235+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:52.561237+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:52.628706+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:52.702777+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.06946945190429688, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:52.703781+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:52.705781+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:52.763775+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:52.783777+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.05999326705932617, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:52.785777+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:52.788777+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:52.843775+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:52.863779+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.0560002326965332, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:52.864777+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:52.866778+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:52.932776+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:52.950782+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.06800055503845215, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:52.951782+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:52.954777+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:53.034918+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:53.069919+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.08113837242126465, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:53.200006+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:53.218004+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:53.296009+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:53.430086+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.08999943733215332, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:53.431087+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:53.433088+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:53.502604+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:53.524609+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.06951570510864258, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:53.528608+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:53.531604+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:53.594697+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:53.623687+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.06508469581604004, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:53.625691+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:53.627687+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:53.704684+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:53.730684+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.07899618148803711, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:53.731685+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:53.733685+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:53.810690+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:53.841684+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.07799863815307617, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:07:53.947687+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:54.122710+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:07:55.823685+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:07.646611+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T14:08:07.647616+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T14:08:07.650611+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T14:08:08.028462+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T14:08:08.838693+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "SANDBOX", "schema": null}
{"timestamp": "2025-06-23T14:08:08.919811+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:09.222168+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:09.335171+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:08:09.337170+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:09.394175+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:09.463173+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.05800485610961914, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:08:09.464172+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:08:09.466174+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:09.520212+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:09.540209+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.05603766441345215, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:08:09.542209+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:08:09.544212+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:09.615215+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:09.640212+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.07200145721435547, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:08:09.642211+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:08:09.643218+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:09.721211+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:09.741211+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.07899355888366699, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:08:09.742210+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:08:09.744210+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:09.849210+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:09.876214+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.10500025749206543, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:08:09.920342+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:08:09.922343+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:10.025340+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT ORDERDATE, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY ORDERDATE\nORDER BY ORDERDATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:10.095347+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.10500121116638184, "code_block": "st.line_chart(data=df, x=\"ORDERDATE\", y=\"TOTAL_SALES\", x_label=\"Order Date\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:08:10.096343+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:08:10.099349+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:10.149348+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT REGION, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY REGION\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:10.173344+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.05099797248840332, "code_block": "st.bar_chart(data=df, x=\"REGION\", y=\"TOTAL_SALES\", x_label=\"Region\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:08:10.174343+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:08:10.176347+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:10.240341+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY CATEGORY\nORDER BY TOTAL_SALES DESC;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:10.257343+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.06399345397949219, "code_block": "st.bar_chart(data=df, x=\"CATEGORY\", y=\"TOTAL_SALES\", x_label=\"Category\", y_label=\"Total Sales\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:08:10.258343+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:08:10.260343+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:10.318358+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT STATE, SUM(PROFIT) AS TOTAL_PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES\nGROUP BY STATE;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:10.338366+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.05901622772216797, "code_block": "st.bar_chart(data=df, x=\"STATE\", y=\"TOTAL_PROFIT\", x_label=\"State\", y_label=\"Total Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:08:10.339362+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:08:10.342365+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:10.412358+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT DISCOUNT, PROFIT\nFROM SUPERSTORE.SUPERSTORE_SALES;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:10.438363+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.07099127769470215, "code_block": "st.scatter_chart(data=df, x=\"DISCOUNT\", y=\"PROFIT\", x_label=\"Discount\", y_label=\"Profit\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:08:10.528370+00:00", "level": "INFO", "logger": "snowgpt", "message": "User interaction: user_input", "module": "st_utils", "function": "log_user_interaction", "line": 105}
{"timestamp": "2025-06-23T14:08:31.202724+00:00", "level": "INFO", "logger": "snowgpt", "message": "Agent sql_query_agent execution completed", "module": "st_utils", "function": "log_agent_performance", "line": 120, "agent_type": "sql_query_agent", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:31.204724+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT\n  EXTRACT(YEAR FROM SUPERSTORE.SUPERSTORE_SALES.ORDERDATE) AS YEAR,\n  SUM(SUPERSTORE.SUPERSTORE_SALES.SALES) AS TOTAL_SALES,\n  SUM(SUPERSTORE.SUPERSTORE_SALES.PROFIT) AS TOTAL_PROFIT\nFROM\n  SUPERSTORE.SUPERSTORE_SALES\nWHERE\n  SUPERSTORE.SUPERSTORE_SALES.ORDERDATE BETWEEN '2015-01-01' AND '2017-12-31'\nGROUP BY\n  EXTRACT(YEAR FROM SUPERSTORE.SUPERSTORE_SALES.ORDERDATE)\nORDER BY\n  YEAR;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:31.315722+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT\n  EXTRACT(YEAR FROM SUPERSTORE.SUPERSTORE_SALES.ORDERDATE) AS YEAR,\n  SUM(SUPERSTORE.SUPERSTORE_SALES.SALES) AS TOTAL_SALES,\n  SUM(SUPERSTORE.SUPERSTORE_SALES.PROFIT) AS TOTAL_PROFIT\nFROM\n  SUPERSTORE.SUPERSTORE_SALES\nWHERE\n  SUPERSTORE.SUPERSTORE_SALES.ORDERDATE BETWEEN '2015-01-01' AND '2017-12-31'\nGROUP BY\n  EXTRACT(YEAR FROM SUPERSTORE.SUPERSTORE_SALES.ORDERDATE)\nORDER BY\n  YEAR;", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:33.280909+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:33.649819+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:35.366344+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT YEAR(ORDERDATE), SUM(SALES) AS TOTAL_SALES\r\nFROM SUPERSTORE.SUPERSTORE_SALES\r\nGROUP BY YEAR(ORDERDATE)\r\nORDER BY YEAR(ORDERDATE);", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:35.416340+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT YEAR(ORDERDATE), SUM(SALES) AS TOTAL_SALES\r\nFROM SUPERSTORE.SUPERSTORE_SALES\r\nGROUP BY YEAR(ORDERDATE)\r\nORDER BY YEAR(ORDERDATE);", "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:08:35.420346+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "SANDBOX", "schema": "SUPERSTORE"}
{"timestamp": "2025-06-23T14:09:45.019162+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T14:09:45.020003+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T14:09:45.021004+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T14:09:45.363004+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T14:09:46.361117+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "US_CRIME", "schema": null}
{"timestamp": "2025-06-23T14:09:46.433213+00:00", "level": "INFO", "logger": "snowgpt", "message": "Database/Schema context changed", "module": "app", "function": "<module>", "line": 100}
{"timestamp": "2025-06-23T14:09:46.435215+00:00", "level": "INFO", "logger": "snowgpt", "message": "Session state reset due to context change", "module": "app", "function": "<module>", "line": 117}
{"timestamp": "2025-06-23T14:09:46.435215+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:09:46.738299+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:09:46.772302+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:09:46.948813+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:09:49.539378+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT YEAR(ORDERDATE), SUM(SALES) AS TOTAL_SALES\r\nFROM SUPERSTORE.SUPERSTORE_SALES\r\nGROUP BY YEAR(ORDERDATE)\r\nORDER BY YEAR(ORDERDATE);", "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:09:49.661375+00:00", "level": "ERROR", "logger": "snowgpt", "message": "SQL query execution failed", "module": "snowflake_utils", "function": "execute_query_df", "line": 299, "sql_query_full": "SELECT YEAR(ORDERDATE), SUM(SALES) AS TOTAL_SALES\r\nFROM SUPERSTORE.SUPERSTORE_SALES\r\nGROUP BY YEAR(ORDERDATE)\r\nORDER BY YEAR(ORDERDATE);", "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:09:49.667374+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:09:56.945517+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T14:09:56.945517+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T14:09:56.947518+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T14:09:57.272517+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T14:09:58.154320+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "US_CRIME", "schema": null}
{"timestamp": "2025-06-23T14:09:58.223321+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:09:58.541081+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:09:58.570605+00:00", "level": "INFO", "logger": "snowgpt", "message": "User interaction: user_input", "module": "st_utils", "function": "log_user_interaction", "line": 105}
{"timestamp": "2025-06-23T14:10:02.313463+00:00", "level": "INFO", "logger": "snowgpt", "message": "Agent routing_agent execution completed", "module": "st_utils", "function": "log_agent_performance", "line": 120, "agent_type": "routing_agent"}
{"timestamp": "2025-06-23T14:10:02.428638+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T14:10:02.429634+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T14:10:02.430634+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T14:10:02.782779+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T14:10:03.753265+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "US_CRIME", "schema": null}
{"timestamp": "2025-06-23T14:10:03.833263+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:10:03.999739+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:10:04.074176+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:10:04.381171+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:10:06.234491+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:10:06.470014+00:00", "level": "INFO", "logger": "snowgpt", "message": "Logging system fully configured and ready", "module": "app", "function": "<module>", "line": 35}
{"timestamp": "2025-06-23T14:10:06.471014+00:00", "level": "INFO", "logger": "snowgpt", "message": "SnowGPT application started", "module": "app", "function": "<module>", "line": 38, "session_id": "unknown"}
{"timestamp": "2025-06-23T14:10:06.473014+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T14:10:06.674020+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "SNOWFLAKE", "schema": null}
{"timestamp": "2025-06-23T14:10:07.705596+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "US_CRIME", "schema": null}
{"timestamp": "2025-06-23T14:10:07.773637+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:10:07.921889+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:10:07.995941+00:00", "level": "INFO", "logger": "snowgpt", "message": "User interaction: user_input", "module": "st_utils", "function": "log_user_interaction", "line": 105}
{"timestamp": "2025-06-23T14:10:33.208479+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT OFFENSE_CATEGORY, COUNT(*) AS INCIDENT_COUNT\nFROM CYBERSYN.URBAN_CRIME_INCIDENT_LOG\nWHERE CITY = 'New York'\nGROUP BY OFFENSE_CATEGORY\nORDER BY INCIDENT_COUNT DESC\nLIMIT 10;", "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:10:33.933740+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT OFFENSE_CATEGORY, COUNT(*) AS INCIDENT_COUNT\nFROM CYBERSYN.URBAN_CRIME_INCIDENT_LOG\nWHERE CITY = 'New York'\nGROUP BY OFFENSE_CATEGORY\nORDER BY INCIDENT_COUNT DESC\nLIMIT 10;", "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:10:36.321466+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "WITH top_crimes AS (\n  SELECT OFFENSE_CATEGORY\n  FROM CYBERSYN.URBAN_CRIME_INCIDENT_LOG\n  WHERE CITY = 'New York'\n  GROUP BY OFFENSE_CATEGORY\n  ORDER BY COUNT(*) DESC\n  LIMIT 5\n)\nSELECT DATE_TRUNC('month', DATE) AS MONTH, OFFENSE_CATEGORY, COUNT(*) AS INCIDENT_COUNT\nFROM CYBERSYN.URBAN_CRIME_INCIDENT_LOG\nWHERE CITY = 'New York' AND OFFENSE_CATEGORY IN (SELECT OFFENSE_CATEGORY FROM top_crimes)\nGROUP BY MONTH, OFFENSE_CATEGORY\nORDER BY MONTH, OFFENSE_CATEGORY;", "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:10:36.992864+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "WITH top_crimes AS (\n  SELECT OFFENSE_CATEGORY\n  FROM CYBERSYN.URBAN_CRIME_INCIDENT_LOG\n  WHERE CITY = 'New York'\n  GROUP BY OFFENSE_CATEGORY\n  ORDER BY COUNT(*) DESC\n  LIMIT 5\n)\nSELECT DATE_TRUNC('month', DATE) AS MONTH, OFFENSE_CATEGORY, COUNT(*) AS INCIDENT_COUNT\nFROM CYBERSYN.URBAN_CRIME_INCIDENT_LOG\nWHERE CITY = 'New York' AND OFFENSE_CATEGORY IN (SELECT OFFENSE_CATEGORY FROM top_crimes)\nGROUP BY MONTH, OFFENSE_CATEGORY\nORDER BY MONTH, OFFENSE_CATEGORY;", "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:10:39.645500+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT GEO_ID, COUNT(*) AS INCIDENT_COUNT\nFROM CYBERSYN.URBAN_CRIME_INCIDENT_LOG\nWHERE CITY = 'New York'\nGROUP BY GEO_ID;", "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:10:39.988785+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT GEO_ID, COUNT(*) AS INCIDENT_COUNT\nFROM CYBERSYN.URBAN_CRIME_INCIDENT_LOG\nWHERE CITY = 'New York'\nGROUP BY GEO_ID;", "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:10:42.545247+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT EXTRACT(YEAR FROM DATE) AS YEAR, COUNT(*) AS INCIDENT_COUNT\nFROM CYBERSYN.URBAN_CRIME_INCIDENT_LOG\nWHERE CITY = 'New York'\nGROUP BY YEAR\nORDER BY YEAR;", "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:10:42.857287+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT EXTRACT(YEAR FROM DATE) AS YEAR, COUNT(*) AS INCIDENT_COUNT\nFROM CYBERSYN.URBAN_CRIME_INCIDENT_LOG\nWHERE CITY = 'New York'\nGROUP BY YEAR\nORDER BY YEAR;", "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:10:43.959201+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT CASE \n    WHEN OFFENSE_CATEGORY IN ('Homicide', 'Aggravated Assault', 'Robbery', 'Battery Or Assault') THEN 'Violent'\n    ELSE 'Non-Violent'\n  END AS CRIME_TYPE, COUNT(*) AS INCIDENT_COUNT\nFROM CYBERSYN.URBAN_CRIME_INCIDENT_LOG\nWHERE CITY = 'New York'\nGROUP BY CRIME_TYPE;", "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:10:44.301275+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT CASE \n    WHEN OFFENSE_CATEGORY IN ('Homicide', 'Aggravated Assault', 'Robbery', 'Battery Or Assault') THEN 'Violent'\n    ELSE 'Non-Violent'\n  END AS CRIME_TYPE, COUNT(*) AS INCIDENT_COUNT\nFROM CYBERSYN.URBAN_CRIME_INCIDENT_LOG\nWHERE CITY = 'New York'\nGROUP BY CRIME_TYPE;", "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:11:00.322628+00:00", "level": "INFO", "logger": "snowgpt", "message": "Agent dashboard_agent execution completed", "module": "st_utils", "function": "log_agent_performance", "line": 120, "agent_type": "dashboard_agent", "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:11:00.325114+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"OFFENSE_CATEGORY\", y=\"INCIDENT_COUNT\", x_label=\"Offense Category\", y_label=\"Incident Count\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:11:00.326628+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT OFFENSE_CATEGORY, COUNT(*) AS INCIDENT_COUNT\nFROM CYBERSYN.URBAN_CRIME_INCIDENT_LOG\nWHERE CITY = 'New York'\nGROUP BY OFFENSE_CATEGORY\nORDER BY INCIDENT_COUNT DESC\nLIMIT 10;", "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:11:00.509624+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT OFFENSE_CATEGORY, COUNT(*) AS INCIDENT_COUNT\nFROM CYBERSYN.URBAN_CRIME_INCIDENT_LOG\nWHERE CITY = 'New York'\nGROUP BY OFFENSE_CATEGORY\nORDER BY INCIDENT_COUNT DESC\nLIMIT 10;", "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:11:00.532625+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.18399500846862793, "code_block": "st.bar_chart(data=df, x=\"OFFENSE_CATEGORY\", y=\"INCIDENT_COUNT\", x_label=\"Offense Category\", y_label=\"Incident Count\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:11:00.533629+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.line_chart(data=df, x=\"MONTH\", y=\"INCIDENT_COUNT\", color=\"OFFENSE_CATEGORY\", x_label=\"Month\", y_label=\"Incident Count\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:11:00.535625+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "WITH top_crimes AS (\n  SELECT OFFENSE_CATEGORY\n  FROM CYBERSYN.URBAN_CRIME_INCIDENT_LOG\n  WHERE CITY = 'New York'\n  GROUP BY OFFENSE_CATEGORY\n  ORDER BY COUNT(*) DESC\n  LIMIT 5\n)\nSELECT DATE_TRUNC('month', DATE) AS MONTH, OFFENSE_CATEGORY, COUNT(*) AS INCIDENT_COUNT\nFROM CYBERSYN.URBAN_CRIME_INCIDENT_LOG\nWHERE CITY = 'New York' AND OFFENSE_CATEGORY IN (SELECT OFFENSE_CATEGORY FROM top_crimes)\nGROUP BY MONTH, OFFENSE_CATEGORY\nORDER BY MONTH, OFFENSE_CATEGORY;", "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:11:00.724147+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "WITH top_crimes AS (\n  SELECT OFFENSE_CATEGORY\n  FROM CYBERSYN.URBAN_CRIME_INCIDENT_LOG\n  WHERE CITY = 'New York'\n  GROUP BY OFFENSE_CATEGORY\n  ORDER BY COUNT(*) DESC\n  LIMIT 5\n)\nSELECT DATE_TRUNC('month', DATE) AS MONTH, OFFENSE_CATEGORY, COUNT(*) AS INCIDENT_COUNT\nFROM CYBERSYN.URBAN_CRIME_INCIDENT_LOG\nWHERE CITY = 'New York' AND OFFENSE_CATEGORY IN (SELECT OFFENSE_CATEGORY FROM top_crimes)\nGROUP BY MONTH, OFFENSE_CATEGORY\nORDER BY MONTH, OFFENSE_CATEGORY;", "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:11:00.793145+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.18952059745788574, "code_block": "st.line_chart(data=df, x=\"MONTH\", y=\"INCIDENT_COUNT\", color=\"OFFENSE_CATEGORY\", x_label=\"Month\", y_label=\"Incident Count\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:11:00.796149+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.bar_chart(data=df, x=\"GEO_ID\", y=\"INCIDENT_COUNT\", x_label=\"Zip Code\", y_label=\"Incident Count\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:11:00.798146+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT GEO_ID, COUNT(*) AS INCIDENT_COUNT\nFROM CYBERSYN.URBAN_CRIME_INCIDENT_LOG\nWHERE CITY = 'New York'\nGROUP BY GEO_ID;", "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:11:00.915151+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT GEO_ID, COUNT(*) AS INCIDENT_COUNT\nFROM CYBERSYN.URBAN_CRIME_INCIDENT_LOG\nWHERE CITY = 'New York'\nGROUP BY GEO_ID;", "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:11:00.937151+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.11800456047058105, "code_block": "st.bar_chart(data=df, x=\"GEO_ID\", y=\"INCIDENT_COUNT\", x_label=\"Zip Code\", y_label=\"Incident Count\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:11:00.938151+00:00", "level": "INFO", "logger": "snowgpt", "message": "Starting visualization render", "module": "st_utils", "function": "render_visualization", "line": 43, "code_block": "st.line_chart(data=df, x=\"YEAR\", y=\"INCIDENT_COUNT\", x_label=\"Year\", y_label=\"Incident Count\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:11:00.939150+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT EXTRACT(YEAR FROM DATE) AS YEAR, COUNT(*) AS INCIDENT_COUNT\nFROM CYBERSYN.URBAN_CRIME_INCIDENT_LOG\nWHERE CITY = 'New York'\nGROUP BY YEAR\nORDER BY YEAR;", "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:11:01.050148+00:00", "level": "INFO", "logger": "snowgpt", "message": "SQL query executed successfully", "module": "snowflake_utils", "function": "execute_query_df", "line": 285, "sql_query_full": "SELECT EXTRACT(YEAR FROM DATE) AS YEAR, COUNT(*) AS INCIDENT_COUNT\nFROM CYBERSYN.URBAN_CRIME_INCIDENT_LOG\nWHERE CITY = 'New York'\nGROUP BY YEAR\nORDER BY YEAR;", "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:11:01.107148+00:00", "level": "INFO", "logger": "snowgpt", "message": "Visualization render completed", "module": "st_utils", "function": "render_visualization", "line": 88, "query_time": 0.11099863052368164, "code_block": "st.line_chart(data=df, x=\"YEAR\", y=\"INCIDENT_COUNT\", x_label=\"Year\", y_label=\"Incident Count\", use_container_width=True)"}
{"timestamp": "2025-06-23T14:11:01.110150+00:00", "level": "INFO", "logger": "snowgpt", "message": "Attempting Snowflake connection", "module": "snowflake_utils", "function": "connect", "line": 43, "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:11:01.432146+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection established", "module": "snowflake_utils", "function": "connect", "line": 61, "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:11:03.482219+00:00", "level": "INFO", "logger": "snowgpt", "message": "Executing SQL query", "module": "snowflake_utils", "function": "execute_query_df", "line": 267, "sql_query_full": "SELECT YEAR(ORDERDATE), SUM(SALES) AS TOTAL_SALES\r\nFROM SUPERSTORE.SUPERSTORE_SALES\r\nGROUP BY YEAR(ORDERDATE)\r\nORDER BY YEAR(ORDERDATE);", "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:11:03.555218+00:00", "level": "ERROR", "logger": "snowgpt", "message": "SQL query execution failed", "module": "snowflake_utils", "function": "execute_query_df", "line": 299, "sql_query_full": "SELECT YEAR(ORDERDATE), SUM(SALES) AS TOTAL_SALES\r\nFROM SUPERSTORE.SUPERSTORE_SALES\r\nGROUP BY YEAR(ORDERDATE)\r\nORDER BY YEAR(ORDERDATE);", "database": "US_CRIME", "schema": "CYBERSYN"}
{"timestamp": "2025-06-23T14:11:03.561220+00:00", "level": "INFO", "logger": "snowgpt", "message": "Snowflake connection closed", "module": "snowflake_utils", "function": "close_connection", "line": 581, "database": "US_CRIME", "schema": "CYBERSYN"}
